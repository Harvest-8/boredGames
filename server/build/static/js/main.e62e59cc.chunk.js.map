{"version":3,"sources":["games/chess/Chessgame.js","redux/actions/userActions.js","redux/types.js","pages/Login.js","pages/Signup.js","pages/Home.js","components/Navbar.js","pages/Games.js","games/game_util/panel.js","games/chess/peices/ChessPeice.js","games/chess/chessboard.js","util/AuthRoute.js","util/AuthedRoute.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/store.js","App.js","serviceWorker.js","index.js","pages/game-imgs/chess.PNG","games/chess/chess-peices/bb.svg","games/chess/chess-peices/bk.svg","games/chess/chess-peices/bq.svg","games/chess/chess-peices/br.svg","games/chess/chess-peices/bn.svg","games/chess/chess-peices/bp.svg","games/chess/chess-peices/wb.svg","games/chess/chess-peices/wk.svg","games/chess/chess-peices/wq.svg","games/chess/chess-peices/wr.svg","games/chess/chess-peices/wn.svg","games/chess/chess-peices/wp.svg"],"names":["socket","loginUser","userData","history","dispatch","type","axios","post","then","res","FBIdToken","data","token","localStorage","setItem","defaults","headers","common","getUserData","push","catch","err","console","log","payload","response","signupUser","newUserData","get","Login","handleSubmit","e","preventDefault","email","state","password","props","handleChange","setState","target","name","value","errors","nextProps","UI","this","loading","className","noValidate","onSubmit","general","id","placeholder","onChange","htmlFor","to","Component","connect","user","signup","confirmPassword","handle","classes","Home","Navbar","authenticated","Games","src","chess","alt","Panel","fill","black","droppableId","location","provided","snapshot","onClick","onMove","style","backgroundColor","ref","innerRef","isDraggingOver","position","height","width","children","ChessPeice","key","draggableId","index","draggableProps","dragHandleProps","getPeice","img","Chessboard","board","currentFen","split","i","j","panel","parseInt","isNaN","x","replace","repeat","panels","empty","wp","bp","wr","br","wn","bn","wb","bb","wq","bq","wk","bk","onDragEnd","handleDrag","player","Chess","require","Chessgame","targetPanel","targetPeice","peicePanel","joinedRoom","joinedMatch","matchRoom","promo","prevMove","lost","won","draw","inCheck","prevProps","credentials","emit","room","io","on","fen","colour","move","onlineMove","gameOver","check","load","fromPan","coords","fenArr","in_checkmate","loser","in_draw","in_stalemate","in_check","setTimeout","isPawn","color","xAxis","yAxis","parentNode","formatMove","checkPromo","promotionTo","from","currentmove","checkMove","destination","source","promotion","component","rest","render","initialState","notifications","middleware","thunk","reducers","combineReducers","action","dataReducer","store","createStore","compose","applyMiddleware","baseURL","jwtDecode","exp","Date","now","removeItem","window","href","App","exact","path","Signup","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.e62e59cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Chessboard from './chessboard';\r\nimport './chessboard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport io from 'socket.io-client';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Chess = require('chess.js');\r\n\r\nlet socket;\r\n\r\nclass Chessgame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chess = null;\r\n\r\n        this.state = {\r\n            getPeice: null,\r\n            targetPanel: null,\r\n            targetPeice: null,\r\n            peicePanel: null,\r\n            currentFen: null,\r\n            user: null,\r\n            joinedRoom: false,\r\n            joinedMatch: false,\r\n            matchRoom: null,\r\n            player: null,\r\n            loading: false,\r\n            promo: false,\r\n            prevMove: null,\r\n            lost: false,\r\n            won: false,\r\n            draw: false,\r\n            inCheck: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user.credentials.handle !== prevProps.user.credentials.handle) {\r\n            socket.emit('disconnected');\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'chess';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket = io();\r\n\r\n        if (this.props.user.credentials.handle) {\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'chess';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n\r\n        socket.on('joinedRoom', (data) => {\r\n            this.setState({ joinedRoom: data });\r\n            console.log(`joined ${data}`);\r\n        });\r\n\r\n        socket.on('loading', (data) => {\r\n            this.setState({ loading: data });\r\n        });\r\n\r\n        socket.on('joinedMatch', (room) => {\r\n            this.chess = new Chess();\r\n            this.setState({ currentFen: this.chess.fen() });\r\n            this.setState({ joinedMatch: true });\r\n            this.setState({ matchRoom: room });\r\n            console.log(`joined match ${room}`);\r\n        });\r\n\r\n        socket.on('player', (colour) => {\r\n            this.setState({ player: colour });\r\n        });\r\n\r\n        socket.on('sendMove', (move) => {\r\n            this.onlineMove(move);\r\n            this.gameOver(this.chess);\r\n            this.check(this.chess);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.emit('disconnected');\r\n    }\r\n\r\n    onlineMove(move) {\r\n        this.chess.load(move);\r\n        this.setState({ currentFen: move });\r\n        console.log('moved');\r\n    }\r\n\r\n    formatMove(fromPan, coords) {\r\n        fromPan = fromPan.split('-');\r\n        fromPan[0] = parseInt(fromPan[0]);\r\n        fromPan[1] = parseInt(fromPan[1]);\r\n        coords = coords.split('-');\r\n        coords[0] = parseInt(coords[0]);\r\n        coords[1] = parseInt(coords[1]);\r\n\r\n        return { fromPan, coords };\r\n    }\r\n\r\n    checkMove(fen) {\r\n        let fenArr = fen.split(' ');\r\n        if (this.state.player === 'black') {\r\n            if (fenArr[1] === 'w') {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {\r\n            if (fenArr[1] === 'b') {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    gameOver(chess) {\r\n        if (chess.in_checkmate()) {\r\n            let loser = chess.fen().split(' ')[1];\r\n            if (loser === 'w') {\r\n                if (this.state.player === 'white') {\r\n                    this.setState({ lost: true });\r\n                } else {\r\n                    this.setState({ won: true });\r\n                }\r\n            } else if (loser === 'b') {\r\n                if (this.state.player === 'black') {\r\n                    this.setState({ lost: true });\r\n                } else {\r\n                    this.setState({ won: true });\r\n                }\r\n            }\r\n        } else if (chess.in_draw()) {\r\n            this.setState({ draw: true });\r\n        } else if (chess.in_stalemate()) {\r\n            this.setState({ draw: true });\r\n        }\r\n    }\r\n\r\n    check(chess) {\r\n        if (chess.in_check()) {\r\n            this.setState({ inCheck: true });\r\n            setTimeout(() => {\r\n                this.setState({ inCheck: false });\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    checkPromo(fromPan) {\r\n        const xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n        const yAxis = ['8', '7', '6', '5', '4', '3', '2', '1'];\r\n        let isPawn = this.chess.get(`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`);\r\n        if (fromPan[1] === 1 && isPawn.type === 'p' && isPawn.color === 'w') {\r\n            this.setState({ promo: true });\r\n            return true;\r\n        } else if (fromPan[1] === 6 && isPawn.type === 'p' && isPawn.color === 'b') {\r\n            this.setState({ promo: true });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getPeice(e) {\r\n        let targetPeice;\r\n        let peicePanel;\r\n        const xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n        const yAxis = ['8', '7', '6', '5', '4', '3', '2', '1'];\r\n\r\n        targetPeice = e.target.id;\r\n        peicePanel = e.target.parentNode.parentNode.parentNode.id;\r\n        targetPeice = parseInt(targetPeice);\r\n        if (this.state.targetPeice !== null) {\r\n            let { fromPan, coords } = this.formatMove(this.state.peicePanel, peicePanel);\r\n            if (this.checkPromo(fromPan)) {\r\n                if (this.state.promotionTo !== null) {\r\n                    this.chess.move({\r\n                        from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`,\r\n                        to: `${xAxis[coords[0]]}${yAxis[coords[1]]}`,\r\n                    });\r\n                    this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                }\r\n            } else {\r\n                this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n            }\r\n\r\n            let currentmove = this.chess.fen();\r\n            let matchRoom = this.state.matchRoom;\r\n            if (this.state.currentFen !== this.chess.fen()) {\r\n                socket.emit('sendMove', { currentmove, matchRoom });\r\n            }\r\n            this.setState({ currentFen: this.chess.fen() });\r\n            this.setState({ targetPeice });\r\n            this.setState({ peicePanel });\r\n        } else {\r\n            this.setState({ targetPeice });\r\n            this.setState({ peicePanel });\r\n        }\r\n        this.gameOver(this.chess);\r\n        this.check(this.chess);\r\n    }\r\n\r\n    render() {\r\n        const xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n        const yAxis = ['8', '7', '6', '5', '4', '3', '2', '1'];\r\n        const newGame = () => {\r\n            if (this.state.joinedRoom) {\r\n                const user = this.state.user;\r\n                const room = 'chess';\r\n                socket.emit('waiting', { user, room });\r\n            }\r\n        };\r\n\r\n        const handleDrag = (e) => {\r\n            const { destination, source, draggableId } = e;\r\n            if (!destination) {\r\n                return;\r\n            }\r\n            if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n                return;\r\n            }\r\n            let { fromPan, coords } = this.formatMove(source.droppableId, destination.droppableId);\r\n            let pMove = this.checkMove(this.chess.fen());\r\n            if (pMove) {\r\n                if (this.checkPromo(fromPan)) {\r\n                    if (this.state.promotionTo !== null) {\r\n                        this.chess.move({\r\n                            from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`,\r\n                            to: `${xAxis[coords[0]]}${yAxis[coords[1]]}`,\r\n                        });\r\n                        this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                    }\r\n                } else {\r\n                    this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                    this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                }\r\n                if (this.state.currentFen === this.chess.fen()) {\r\n                } else {\r\n                    let currentmove = this.chess.fen();\r\n                    let matchRoom = this.state.matchRoom;\r\n                    if (this.state.currentFen !== this.chess.fen()) {\r\n                        socket.emit('sendMove', { currentmove, matchRoom });\r\n                    }\r\n                    this.setState({ currentFen: this.chess.fen() });\r\n                }\r\n            }\r\n            this.gameOver(this.chess);\r\n            this.check(this.chess);\r\n        };\r\n\r\n        const handleMove = (e) => {\r\n            let target;\r\n            if (typeof e === 'string') {\r\n                target = e;\r\n            } else {\r\n                target = e.target.parentNode.id;\r\n            }\r\n            this.setState({ targetPanel: target });\r\n            if (this.state.targetPeice !== null) {\r\n                let { fromPan, coords } = this.formatMove(this.state.peicePanel, target);\r\n                let pMove = this.checkMove(this.chess.fen());\r\n                if (pMove) {\r\n                    if (this.checkPromo(fromPan)) {\r\n                        this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                        this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                    } else {\r\n                        this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                        this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                    }\r\n                    if (this.state.currentFen === this.chess.fen()) {\r\n                    } else {\r\n                        let currentmove = this.chess.fen();\r\n                        let matchRoom = this.state.matchRoom;\r\n                        if (this.state.currentFen !== this.chess.fen()) {\r\n                            socket.emit('sendMove', { currentmove, matchRoom });\r\n                        }\r\n                        this.setState({ currentFen: this.chess.fen() });\r\n                    }\r\n                }\r\n                this.setState({ targetPeice: null });\r\n                this.setState({ peicePanel: null });\r\n            }\r\n            this.gameOver(this.chess);\r\n            this.check(this.chess);\r\n        };\r\n        if (this.state.joinedMatch) {\r\n            return (\r\n                <div>\r\n                    <Chessboard getPeice={this.getPeice} player={this.state.player} onMove={handleMove} handleDrag={handleDrag} currentFen={this.state.currentFen} />\r\n                    {this.state.promo && (\r\n                        <div className=\"promotion\">\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.chess.move({\r\n                                        from: this.state.prevMove[0],\r\n                                        to: this.state.prevMove[1],\r\n                                        promotion: 'q',\r\n                                    });\r\n                                    this.setState({ promo: false });\r\n                                    let currentmove = this.chess.fen();\r\n                                    let matchRoom = this.state.matchRoom;\r\n                                    socket.emit('sendMove', { currentmove, matchRoom });\r\n                                    this.setState({ currentFen: this.chess.fen() });\r\n                                }}\r\n                            >\r\n                                Queen\r\n                            </button>\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.chess.move({\r\n                                        from: this.state.prevMove[0],\r\n                                        to: this.state.prevMove[1],\r\n                                        promotion: 'r',\r\n                                    });\r\n                                    this.setState({ promo: false });\r\n                                    let currentmove = this.chess.fen();\r\n                                    let matchRoom = this.state.matchRoom;\r\n                                    socket.emit('sendMove', { currentmove, matchRoom });\r\n                                    this.setState({ currentFen: this.chess.fen() });\r\n                                }}\r\n                            >\r\n                                Rook\r\n                            </button>\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.chess.move({\r\n                                        from: this.state.prevMove[0],\r\n                                        to: this.state.prevMove[1],\r\n                                        promotion: 'b',\r\n                                    });\r\n                                    this.setState({ promo: false });\r\n                                    let currentmove = this.chess.fen();\r\n                                    let matchRoom = this.state.matchRoom;\r\n                                    socket.emit('sendMove', { currentmove, matchRoom });\r\n                                    this.setState({ currentFen: this.chess.fen() });\r\n                                }}\r\n                            >\r\n                                Bishop\r\n                            </button>\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.chess.move({\r\n                                        from: this.state.prevMove[0],\r\n                                        to: this.state.prevMove[1],\r\n                                        promotion: 'n',\r\n                                    });\r\n                                    this.setState({ promo: false });\r\n                                    let currentmove = this.chess.fen();\r\n                                    let matchRoom = this.state.matchRoom;\r\n                                    socket.emit('sendMove', { currentmove, matchRoom });\r\n                                    this.setState({ currentFen: this.chess.fen() });\r\n                                }}\r\n                            >\r\n                                Knight\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    {this.state.won && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Won</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.draw && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>Draw</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.lost && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Lost</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.inCheck && <h1 className=\"alert\">Check</h1>}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {this.state.user && (\r\n                        <button className=\"btn\" onClick={newGame}>\r\n                            Find Match\r\n                        </button>\r\n                    )}\r\n                    {this.state.loading && <h3>Loading...</h3>}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\n\r\nChessgame.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chessgame);\r\n","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED } from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post('/api/login', userData)\r\n        .then((res) => {\r\n            const FBIdToken = `Bearer ${res.data.token}`;\r\n            localStorage.setItem('FBIdToken', FBIdToken);\r\n            axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n        });\r\n};\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post('/api/signup', newUserData)\r\n        .then((res) => {\r\n            const FBIdToken = `Bearer ${res.data.token}`;\r\n            localStorage.setItem('FBIdToken', FBIdToken);\r\n            axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n        });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    axios\r\n        .get('/api/user')\r\n        .then((res) => {\r\n            dispatch({ type: SET_USER, payload: res.data });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\n","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\n\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import React, { Component } from 'react';\r\nimport './../styles/form.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nexport class Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n        this.props.loginUser(userData, this.props.history);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const {\r\n            UI: { loading },\r\n        } = this.props;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <form noValidate onSubmit={this.handleSubmit}>\r\n                    <div className={errors.email || errors.general ? 'error field' : 'field'}>\r\n                        <input value={this.state.email} id=\"email\" type=\"email\" name=\"email\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                        <label htmlFor=\"email\" className=\"label\">\r\n                            Email\r\n                        </label>\r\n                    </div>\r\n                    <p className=\"errors error\">{errors.email}</p>\r\n                    <div className={errors.password || errors.general ? 'error field' : 'field'}>\r\n                        <input value={this.state.password} id=\"password\" type=\"password\" name=\"password\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                        <label htmlFor=\"password\" className=\"label\">\r\n                            Password\r\n                        </label>\r\n                    </div>\r\n                    <p className=\"errors error\">{errors.password}</p>\r\n                    <p className=\"errors error\">{errors.general}</p>\r\n                    <button type=\"submit\" className=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                    <p className=\"authSwitch\">\r\n                        don't have an account?{' '}\r\n                        <Link to=\"/signup\" className=\"footerLink\">\r\n                            Signup\r\n                        </Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    loginUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Component } from 'react';\r\nimport './../styles/form.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n\r\nexport class signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            loading: false,\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle,\r\n        };\r\n        this.props.signupUser(userData, this.props.history);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { loading, errors } = this.state;\r\n        return (\r\n            <div className=\"signup\">\r\n                <form noValidate onSubmit={this.handleSubmit}>\r\n                    <div className={errors.email || errors.general ? 'error field' : 'field'}>\r\n                        <input value={this.state.email} id=\"email\" type=\"email\" name=\"email\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                        <label htmlFor=\"email\" className=\"label\">\r\n                            Email\r\n                        </label>\r\n                    </div>\r\n                    <p className=\"errors error\">{errors.email}</p>\r\n                    <div className=\"field\" className={errors.password || errors.general ? 'error field' : 'field'}>\r\n                        <input value={this.state.password} id=\"password\" type=\"password\" name=\"password\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                        <label htmlFor=\"password\" className=\"label\">\r\n                            Password\r\n                        </label>\r\n                    </div>\r\n                    <p className=\"errors error\">{errors.password}</p>\r\n                    <div className={errors.confirmPassword || errors.general ? 'error field' : 'field'}>\r\n                        <input\r\n                            value={this.state.confirmPassword}\r\n                            id=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            className=\"input\"\r\n                            placeholder=\" \"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <label htmlFor=\"password\" className=\"label\">\r\n                            Confirm Password\r\n                        </label>\r\n                    </div>\r\n                    <p className=\"errors error\">{errors.confirmPassword}</p>\r\n                    <div className={errors.handle || errors.general ? 'error field' : 'field'}>\r\n                        <input value={this.state.handle} id=\"handle\" type=\"text\" name=\"handle\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                        <label htmlFor=\"username\" className=\"label\">\r\n                            Username\r\n                        </label>\r\n                    </div>\r\n                    <p className=\"errors error\">{errors.handle}</p>\r\n                    <p className=\"errors error\">{errors.general}</p>\r\n                    <button type=\"submit\" className=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                    <p className=\"authSwitch\">\r\n                        already have an accout?{' '}\r\n                        <Link to=\"/login\" className=\"footerLink\">\r\n                            Login\r\n                        </Link>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    signupUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    signupUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, { signupUser })(signup);\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return <div>Home</div>;\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport './../styles/Navbar.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        const {\r\n            user: { authenticated },\r\n        } = this.props;\r\n        if (authenticated === true) {\r\n            return (\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/games\" className=\"link\">\r\n                                Games\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/\" className=\"link\">\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/profile\" className=\"link\">\r\n                                Profile\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            );\r\n        } else {\r\n            return (\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/login\" className=\"link\">\r\n                                Login\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/\" className=\"link\">\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/signup\" className=\"link\">\r\n                                Signup\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\n\r\nNavbar.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './../styles/games.css';\r\nimport chess from './game-imgs/chess.PNG';\r\nimport io from 'socket.io-client';\r\n\r\nclass Games extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/games/chess\" className=\"game-link\">\r\n                    <div className=\"selector\">\r\n                        <img src={chess} alt=\"chess\" className=\"selector-img\" />\r\n                        <h3>Chess</h3>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Games;\r\n","import React, { Component } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport './panel.css';\r\n\r\nexport class Panel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const fill = this.props.black ? 'silver' : 'white';\r\n\r\n        return (\r\n            <Droppable droppableId={`${this.props.location}`}>\r\n                {(provided, snapshot) => (\r\n                    <div onClick={this.props.onMove} id={this.props.location} className=\"chessPanel\" style={{ backgroundColor: fill }}>\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={{ backgroundColor: snapshot.isDraggingOver ? 'rgba(52,183,235, 0.7)' : 'transparent', position: 'absolute', height: '100%', width: '100%' }}\r\n                        >\r\n                            {provided.placeholder}\r\n                        </div>\r\n                        <div className=\"peice-container\">{this.props.children}</div>\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panel;\r\n","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport './../chessboard.css';\r\n\r\nexport class ChessPeice extends Component {\r\n    render() {\r\n        return (\r\n            <Draggable key={this.props.id} draggableId={'' + this.props.id + ''} index={this.props.id}>\r\n                {(provided) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"draggable-area\">\r\n                        <img onClick={this.props.getPeice} id={this.props.id} src={this.props.img} className=\"peice\" alt=\"peice\" />\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChessPeice;\r\n","import bb from './chess-peices/bb.svg';\r\nimport bk from './chess-peices/bk.svg';\r\nimport bq from './chess-peices/bq.svg';\r\nimport br from './chess-peices/br.svg';\r\nimport bn from './chess-peices/bn.svg';\r\nimport bp from './chess-peices/bp.svg';\r\nimport wb from './chess-peices/wb.svg';\r\nimport wk from './chess-peices/wk.svg';\r\nimport wq from './chess-peices/wq.svg';\r\nimport wr from './chess-peices/wr.svg';\r\nimport wn from './chess-peices/wn.svg';\r\nimport wp from './chess-peices/wp.svg';\r\n\r\nimport React, { Component } from 'react';\r\nimport Panel from './../game_util/panel';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport ChessPeice from './peices/ChessPeice';\r\n\r\nimport './chessboard.css';\r\n\r\nexport class Chessboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let board = this.props.currentFen;\r\n        if (board === null) {\r\n            board = ['11111111', '11111111', '11111111', '11111111', '11111111', '11111111', '11111111', '11111111'];\r\n        } else {\r\n            board = board.split('/');\r\n            board[7] = board[7].split(' ')[0];\r\n            for (let i = 0; i < 8; i++) {\r\n                let x = 0;\r\n                for (let j of board[i]) {\r\n                    let panel = parseInt(j);\r\n                    if (!isNaN(panel)) {\r\n                        let val = '1';\r\n                        board[i] = board[i].replace(j, val.repeat(panel));\r\n                        x = x + panel;\r\n                    } else {\r\n                        x++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const panels = [];\r\n        for (let i = 0; i < 8; i++) {\r\n            for (let j = 0; j < 8; j++) {\r\n                const black = (j + i) % 2 === 1;\r\n                let empty = parseInt(board[i][j]);\r\n                if (!isNaN(empty)) {\r\n                    panels.push(<Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}></Panel>);\r\n                } else {\r\n                    if (board[i][j] === 'P') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wp} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'p') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bp} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'R') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wr} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'r') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={br} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'N') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wn} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'n') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bn} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'B') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wb} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'b') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bb} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'Q') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wq} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'q') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bq} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'K') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wk} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'k') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bk} />\r\n                            </Panel>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <DragDropContext onDragEnd={this.props.handleDrag}>\r\n                <div className={`chessboard ${this.props.player}`}>{panels}</div>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chessboard;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route {...rest} render={(props) => (authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />)} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthedRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route {...rest} render={(props) => (authenticated === false ? <Redirect to=\"/login\" /> : <Component {...props} />)} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\n\r\nAuthedRoute.propTypes = {\r\n    user: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthedRoute);\r\n","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_AUTHENTICATED, SET_UNAUTHENTICATED } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    credentials: {},\r\n    notifications: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload,\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null,\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer,\r\n});\r\n\r\nconst store = createStore(reducers, initialState, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './styles/App.css';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport Navbar from './components/Navbar';\nimport Games from './pages/Games';\nimport chess from './games/chess/Chessgame';\nimport AuthRoute from './util/AuthRoute';\nimport AuthedRoute from './util/AuthedRoute';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { getUserData, logoutUser } from './redux/actions/userActions';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://europe-west1-boredgames-28c8e.cloudfunctions.net';\n\nconst token = localStorage.FBIdToken;\nif (token) {\n    const decodedToken = jwtDecode(token);\n    if (decodedToken.exp * 1000 < Date.now()) {\n        store.dispatch(logoutUser());\n        window.location.href = '/login';\n    } else {\n        store.dispatch({ type: SET_AUTHENTICATED });\n        axios.defaults.headers.common['Authorization'] = token;\n        store.dispatch(getUserData());\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Navbar />\n                    <div className=\"container\">\n                        <Route exact path=\"/\" component={Home} />\n                        <AuthRoute exact path=\"/login\" component={Login} />\n                        <AuthRoute exact path=\"/signup\" component={Signup} />\n                        <AuthedRoute exact path=\"/games\" component={Games} />\n                        <AuthedRoute path=\"/games/chess\" component={chess} />\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chess.248b0159.PNG\";","module.exports = __webpack_public_path__ + \"static/media/bb.8011bf44.svg\";","module.exports = __webpack_public_path__ + \"static/media/bk.d8979832.svg\";","module.exports = __webpack_public_path__ + \"static/media/bq.ef6e2590.svg\";","module.exports = __webpack_public_path__ + \"static/media/br.08c3972b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bn.daa3de25.svg\";","module.exports = __webpack_public_path__ + \"static/media/bp.d1670065.svg\";","module.exports = __webpack_public_path__ + \"static/media/wb.1fe99b0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wk.d0c846df.svg\";","module.exports = __webpack_public_path__ + \"static/media/wq.1198ca3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wr.02fb1599.svg\";","module.exports = __webpack_public_path__ + \"static/media/wn.07bc214c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp.87aea985.svg\";"],"sourceRoot":""}