{"version":3,"sources":["components/Loader.js","redux/types.js","services/util/config.js","games/chess/Chessgame.js","games/connect4/Connectgame.js","games/battleships/BattleGame.js","redux/actions/userActions.js","pages/Login.js","pages/Signup.js","pages/Home.js","redux/actions/friendActions.js","pages/AppHome.js","pages/Games.js","pages/Stats.js","games/game_util/panel.js","games/chess/peices/ChessPeice.js","games/chess/chessboard.js","redux/actions/opponentActions.js","games/connect4/ConnectBoard.js","games/battleships/Ship.js","games/battleships/Panel.js","util/AuthRoute.js","util/AuthedRoute.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/reducers/friendReducer.js","redux/reducers/opponentReducer.js","redux/reducers/statsReducer.js","redux/store.js","App.js","serviceWorker.js","index.js","pages/game-imgs/chess.PNG","pages/game-imgs/connect4.PNG","pages/game-imgs/battleship.PNG","styles/Bishop.svg","services/util/validators.js","styles/close.svg","styles/settings-24px.svg","games/chess/chess-peices/bb.svg","games/chess/chess-peices/bk.svg","games/chess/chess-peices/bq.svg","games/chess/chess-peices/br.svg","games/chess/chess-peices/bn.svg","games/chess/chess-peices/bp.svg","games/chess/chess-peices/wb.svg","games/chess/chess-peices/wk.svg","games/chess/chess-peices/wq.svg","games/chess/chess-peices/wr.svg","games/chess/chess-peices/wn.svg","games/chess/chess-peices/wp.svg"],"names":["Loader","props","className","style","width","this","size","ball","height","id","Component","SET_ERRORS","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","socket","db","firestore","auth","realdb","database","signupUser","newUserData","history","dispatch","userId","type","validateSignupData","valid","errors","doc","handle","get","then","exists","createUserWithEmailAndPassword","email","password","payload","data","user","uid","stats","recent","timePlayed","winLoss","movesMade","opponent","game","chess","gamesPlayed","hoursPlayed","gamesWon","winTimes","winMoves","connect4","battleships","userCredentials","joined","Date","toISOString","imageUrl","set","getUserData","getUserStats","push","catch","err","console","error","code","logoutUser","currentUser","ref","signOut","message","userData","collection","where","limit","credentials","docs","setUserStats","log","Login","handleSubmit","e","preventDefault","state","loginUser","handleChange","setState","target","name","value","nextProps","UI","loading","src","bishop","noValidate","onSubmit","general","placeholder","onChange","htmlFor","to","connect","validateLoginData","signInWithEmailAndPassword","signup","confirmPassword","classes","maxlength","Home","getFriends","resData","friendList","relationships","forEach","friends","on","snapshot","val","status","getFriend","AppHome","checkFriend","users","searchUser","openFriend","addFriend","searchedFriend","logout","closeFriend","friendArr","Object","values","friendData","i","map","friend","key","alt","onClick","settings","battleship","toFixed","close","isFriend","authenticated","statistics","from","Games","Stats","round","precision","multiplier","Math","pow","Panel","fill","black","droppableId","location","provided","onMove","innerRef","isDraggingOver","position","children","ChessPeice","draggableId","index","draggableProps","dragHandleProps","getPeice","img","Chessboard","board","currentFen","split","j","panel","parseInt","isNaN","x","replace","repeat","panels","empty","wp","bp","wr","br","wn","bn","wb","bb","wq","bq","wk","bk","onDragEnd","handleDrag","player","setOpponent","Chess","require","Chessgame","customGame","room","joinedRoom","emit","checkingMove","targetPanel","targetPeice","peicePanel","joinedMatch","matchRoom","promo","prevMove","lost","won","draw","startTime","inCheck","onlinePlayers","roomCode","customRoom","prevProps","io","time","fen","colour","gameOpponent","opp","move","onlineMove","gameOver","check","num","load","fromPan","coords","fenArr","xAxis","yAxis","formatMove","document","getElementById","firstElementChild","classList","add","remove","win","elapsed","getTime","in_checkmate","loser","updateStats","in_draw","in_stalemate","in_check","setTimeout","peice","promotion","currentmove","isPawn","color","parentNode","highlightPanels","checkPromo","promotionTo","checkMove","destination","source","choosePromo","textAlign","marginBottom","result","characters","charactersLength","length","charAt","floor","random","ConnectBoard","currentBoard","Connectgame","myMove","yellow","red","count","handleClick","targetCol","allowMove","Ship","angle","parts","checkRotate","backgroundColor","BattleGame","userHits","oppHits","destroyerRotate","submarineRotate","cruiserRotate","battleshipRotate","carrierRotate","destroyerPos","submarinePos","cruiserPos","battleshipPos","carrierPos","boardValid","boardReady","placeholderBoard","placeholderOppBoard","opBoard","pos","filled","y","callChange","changeboard","Pos","handleMove","panelsOpp","ship","checkPos","appendChild","bind","ships","destroyer","submarine","cruiser","carrier","component","rest","render","initialState","middleware","thunk","reducers","combineReducers","action","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","oldRealTimeDb","onlineRef","onAuthStateChanged","onDisconnect","onblur","onfocus","App","exact","path","Signup","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports","isEmpty","text","trim","keys","reduceUserDetails","userDetails","bio"],"mappings":"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","file":"static/js/main.ac1bf870.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './../styles/loader.css';\r\n\r\nexport class Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"LoaderBalls\" style={{ width: this.props.size }}>\r\n                <div style={{ width: this.props.ball, height: this.props.ball }} className=\"LoaderBalls__item\" id=\"LoaderBalls1\"></div>\r\n                <div style={{ width: this.props.ball, height: this.props.ball }} className=\"LoaderBalls__item\" id=\"LoaderBalls2\"></div>\r\n                <div style={{ width: this.props.ball, height: this.props.ball }} className=\"LoaderBalls__item\" id=\"LoaderBalls3\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;\r\n","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const SET_STATS = 'SET_STATS';\r\nexport const LOADING_USER = 'LOADING_USER';\r\n\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const UPDATE_STATS = 'UPDATE_STATS';\r\n\r\nexport const SET_FRIEND = 'SET_FRIEND';\r\nexport const SET_FRIENDS = 'SET_FRIENDS';\r\nexport const SEARCH_FRIEND = 'SEARCH_FRIEND';\r\nexport const IS_FRIEND = 'IS_FRIEND';\r\nexport const NOT_FRIEND = 'NOT_FRIEND';\r\nexport const APPEND_FRIEND = 'APPEND_FRIEND';\r\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\r\n\r\nexport const SET_OPPONENT = 'SET_OPPONENT';\r\n","import * as firebase from 'firebase';\r\n\r\nlet config = {\r\n    apiKey: 'AIzaSyDG13UAG9HhqQLBzaFHs18ByqQa-WZOEBo',\r\n    authDomain: 'boredgames-28c8e.firebaseapp.com',\r\n    databaseURL: 'https://boredgames-28c8e.firebaseio.com',\r\n    projectId: 'boredgames-28c8e',\r\n    storageBucket: 'boredgames-28c8e.appspot.com',\r\n    messagingSenderId: '501020012129',\r\n    appId: '1:501020012129:web:5a2e7ba131d6c5ab7d0420',\r\n    measurementId: 'G-52N4RGBHP9',\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React, { Component } from 'react';\r\nimport Chessboard from './chessboard';\r\nimport './chessboard.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { setOpponent } from '../../redux/actions/opponentActions';\r\nimport { setUserStats, getUserStats } from '../../redux/actions/userActions';\r\n\r\nimport io from 'socket.io-client';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Chess = require('chess.js');\r\n\r\nlet socket;\r\n\r\nclass Chessgame extends Component {\r\n    constructor() {\r\n        super();\r\n        this.chess = null;\r\n        this.checkingMove = null;\r\n\r\n        this.state = {\r\n            getPeice: null,\r\n            targetPanel: null,\r\n            targetPeice: null,\r\n            peicePanel: null,\r\n            currentFen: null,\r\n            user: null,\r\n            opponent: {},\r\n            joinedRoom: false,\r\n            joinedMatch: false,\r\n            matchRoom: null,\r\n            player: null,\r\n            loading: false,\r\n            promo: false,\r\n            prevMove: null,\r\n            lost: false,\r\n            won: false,\r\n            draw: false,\r\n            startTime: null,\r\n            movesMade: 0,\r\n            inCheck: false,\r\n            onlinePlayers: 0,\r\n            roomCode: '',\r\n            customRoom: null,\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    customGame = (e) => {\r\n        e.preventDefault();\r\n        let room = this.state.code;\r\n        if (this.state.joinedRoom) {\r\n            const user = this.state.user;\r\n            socket.emit('waiting', { user, room });\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user.credentials.handle !== prevProps.user.credentials.handle) {\r\n            socket.emit('disconnected');\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'chess';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //socket = io('http://192.168.1.106:5000' || 'http://localhost:5000'); //use when developing\r\n\r\n        socket = io(); //use when deploying to heroku\r\n\r\n        if (this.props.user.credentials.handle) {\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'chess';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n\r\n        socket.on('joinedRoom', (data) => {\r\n            this.setState({ joinedRoom: data });\r\n            console.log(`joined ${data}`);\r\n        });\r\n\r\n        socket.on('loading', (data) => {\r\n            this.setState({ loading: data });\r\n        });\r\n\r\n        socket.on('joinedMatch', (room) => {\r\n            this.chess = new Chess();\r\n            this.checkingMove = new Chess();\r\n            let time = new Date();\r\n            this.setState({ startTime: time });\r\n            this.setState({ currentFen: this.chess.fen() });\r\n            this.setState({ joinedMatch: true });\r\n            this.setState({ matchRoom: room });\r\n            this.props.getUserStats();\r\n            console.log(`joined match ${room}`);\r\n        });\r\n\r\n        socket.on('player', (player) => {\r\n            this.setState({ player: player.colour });\r\n            this.gameOpponent(player.opp);\r\n        });\r\n\r\n        socket.on('sendMove', (move) => {\r\n            this.onlineMove(move);\r\n            this.gameOver(this.chess);\r\n            this.check(this.chess);\r\n        });\r\n\r\n        socket.on('numOnline', (num) => {\r\n            this.setState({ onlinePlayers: num });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.emit('disconnected');\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    gameOpponent(user) {\r\n        this.props.setOpponent(user);\r\n    }\r\n\r\n    onlineMove(move) {\r\n        this.chess.load(move);\r\n        this.setState({ currentFen: move });\r\n        console.log('moved');\r\n    }\r\n\r\n    formatMove(fromPan, coords) {\r\n        fromPan = fromPan.split('-');\r\n        fromPan[0] = parseInt(fromPan[0]);\r\n        fromPan[1] = parseInt(fromPan[1]);\r\n        coords = coords.split('-');\r\n        coords[0] = parseInt(coords[0]);\r\n        coords[1] = parseInt(coords[1]);\r\n\r\n        return { fromPan, coords };\r\n    }\r\n\r\n    checkMove(fen) {\r\n        let fenArr = fen.split(' ');\r\n        if (this.state.player === 'black') {\r\n            if (fenArr[1] === 'w') {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {\r\n            if (fenArr[1] === 'b') {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    highlightPanels(peicePanel) {\r\n        const xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n        const yAxis = ['8', '7', '6', '5', '4', '3', '2', '1'];\r\n        for (let i = 0; i < 8; i++) {\r\n            for (let j = 0; j < 8; j++) {\r\n                this.checkingMove.load(this.state.currentFen);\r\n                let { fromPan, coords } = this.formatMove(peicePanel, `${i}-${j}`);\r\n                let shouldHightlight = this.checkingMove.move({\r\n                    from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`,\r\n                    to: `${xAxis[coords[0]]}${yAxis[coords[1]]}`,\r\n                });\r\n                if (shouldHightlight) {\r\n                    let panel = document.getElementById(`${i}-${j}`).firstElementChild;\r\n                    panel.classList.add('highlighted');\r\n                } else {\r\n                    let panel = document.getElementById(`${i}-${j}`).firstElementChild;\r\n                    panel.classList.remove('highlighted');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateStats(win) {\r\n        let finalTime = new Date();\r\n        let elapsed = (finalTime.getTime() - this.state.startTime.getTime()) / 1000;\r\n        let placeholder = this.props.stats;\r\n        placeholder.chess.gamesPlayed = placeholder.chess.gamesPlayed + 1;\r\n        placeholder.chess.hoursPlayed = placeholder.chess.hoursPlayed + elapsed;\r\n        placeholder.chess.movesMade = placeholder.chess.movesMade + this.state.movesMade;\r\n        if (win) {\r\n            placeholder.chess.gamesWon = placeholder.chess.gamesWon + 1;\r\n            placeholder.chess.winTimes = placeholder.chess.winTimes + elapsed;\r\n            placeholder.chess.winMoves = placeholder.chess.winMoves + this.state.movesMade;\r\n            placeholder.recent.winLoss = 'Win';\r\n        } else {\r\n            placeholder.recent.winLoss = 'Loss';\r\n        }\r\n        placeholder.recent.game = 'Chess';\r\n        placeholder.recent.movesMade = this.state.movesMade;\r\n        placeholder.recent.opponent = this.props.opponent.opponent.handle;\r\n        placeholder.recent.timePlayed = elapsed;\r\n\r\n        this.props.setUserStats(placeholder);\r\n    }\r\n\r\n    gameOver(chess) {\r\n        if (chess.in_checkmate()) {\r\n            let loser = chess.fen().split(' ')[1];\r\n            if (loser === 'w') {\r\n                if (this.state.player === 'white') {\r\n                    this.setState({ lost: true });\r\n                    this.updateStats(false);\r\n                } else {\r\n                    this.setState({ won: true });\r\n                    this.updateStats(true);\r\n                }\r\n            } else if (loser === 'b') {\r\n                if (this.state.player === 'black') {\r\n                    this.setState({ lost: true });\r\n                    this.updateStats(false);\r\n                } else {\r\n                    this.setState({ won: true });\r\n                    this.updateStats(true);\r\n                }\r\n            }\r\n        } else if (chess.in_draw()) {\r\n            this.setState({ draw: true });\r\n            this.updateStats(false);\r\n        } else if (chess.in_stalemate()) {\r\n            this.setState({ draw: true });\r\n            this.updateStats(false);\r\n        }\r\n    }\r\n\r\n    check(chess) {\r\n        if (chess.in_check()) {\r\n            this.setState({ inCheck: true });\r\n            setTimeout(() => {\r\n                this.setState({ inCheck: false });\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    choosePromo(peice) {\r\n        this.chess.move({\r\n            from: this.state.prevMove[0],\r\n            to: this.state.prevMove[1],\r\n            promotion: peice,\r\n        });\r\n        this.setState({ promo: false });\r\n        let currentmove = this.chess.fen();\r\n        let matchRoom = this.state.matchRoom;\r\n        socket.emit('sendMove', { currentmove, matchRoom });\r\n        this.setState({ currentFen: this.chess.fen() });\r\n    }\r\n\r\n    checkPromo(fromPan) {\r\n        const xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n        const yAxis = ['8', '7', '6', '5', '4', '3', '2', '1'];\r\n        let isPawn = this.chess.get(`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`);\r\n        if (fromPan[1] === 1 && isPawn.type === 'p' && isPawn.color === 'w') {\r\n            this.setState({ promo: true });\r\n            return true;\r\n        } else if (fromPan[1] === 6 && isPawn.type === 'p' && isPawn.color === 'b') {\r\n            this.setState({ promo: true });\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n        const yAxis = ['8', '7', '6', '5', '4', '3', '2', '1'];\r\n        const newGame = () => {\r\n            if (this.state.joinedRoom) {\r\n                const user = this.state.user;\r\n                const room = 'chess';\r\n                socket.emit('waiting', { user, room });\r\n            }\r\n        };\r\n\r\n        const stopSearch = () => {\r\n            if (this.state.joinedRoom) {\r\n                const user = this.state.user;\r\n                const room = 'chess';\r\n                socket.emit('stopSearch', { user, room });\r\n            }\r\n        };\r\n\r\n        const makeRoom = () => {\r\n            var result = '';\r\n            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n            var charactersLength = characters.length;\r\n            for (var i = 0; i < 6; i++) {\r\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n            }\r\n            this.setState({ customRoom: result });\r\n        };\r\n\r\n        const getPeice = (e) => {\r\n            let targetPeice;\r\n            let peicePanel;\r\n            const xAxis = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n            const yAxis = ['8', '7', '6', '5', '4', '3', '2', '1'];\r\n\r\n            targetPeice = e.target.id;\r\n            peicePanel = e.target.parentNode.parentNode.parentNode.id;\r\n            targetPeice = parseInt(targetPeice);\r\n            this.highlightPanels(peicePanel);\r\n            if (this.state.targetPeice !== null) {\r\n                let { fromPan, coords } = this.formatMove(this.state.peicePanel, peicePanel);\r\n                if (this.checkPromo(fromPan)) {\r\n                    if (this.state.promotionTo !== null) {\r\n                        this.chess.move({\r\n                            from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`,\r\n                            to: `${xAxis[coords[0]]}${yAxis[coords[1]]}`,\r\n                        });\r\n                        this.highlightPanels(peicePanel);\r\n                        this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                    }\r\n                } else {\r\n                    this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                    this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                }\r\n\r\n                let currentmove = this.chess.fen();\r\n                let matchRoom = this.state.matchRoom;\r\n                if (this.state.currentFen !== this.chess.fen()) {\r\n                    this.setState({ movesMade: this.state.movesMade + 1 });\r\n                    socket.emit('sendMove', { currentmove, matchRoom });\r\n                }\r\n                this.setState({ currentFen: this.chess.fen() });\r\n                this.setState({ targetPeice });\r\n                this.setState({ peicePanel });\r\n            } else {\r\n                this.setState({ targetPeice });\r\n                this.setState({ peicePanel });\r\n            }\r\n            this.gameOver(this.chess);\r\n            this.check(this.chess);\r\n        };\r\n\r\n        const handleDrag = (e) => {\r\n            const { destination, source, draggableId } = e;\r\n            if (!destination) {\r\n                return;\r\n            }\r\n            if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n                return;\r\n            }\r\n            let { fromPan, coords } = this.formatMove(source.droppableId, destination.droppableId);\r\n            let pMove = this.checkMove(this.chess.fen());\r\n            if (pMove) {\r\n                if (this.checkPromo(fromPan)) {\r\n                    if (this.state.promotionTo !== null) {\r\n                        this.chess.move({\r\n                            from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`,\r\n                            to: `${xAxis[coords[0]]}${yAxis[coords[1]]}`,\r\n                        });\r\n                        this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                    }\r\n                } else {\r\n                    this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                    this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                }\r\n                if (this.state.currentFen === this.chess.fen()) {\r\n                } else {\r\n                    let currentmove = this.chess.fen();\r\n                    let matchRoom = this.state.matchRoom;\r\n                    if (this.state.currentFen !== this.chess.fen()) {\r\n                        this.setState({ movesMade: this.state.movesMade + 1 });\r\n                        socket.emit('sendMove', { currentmove, matchRoom });\r\n                    }\r\n                    this.setState({ currentFen: this.chess.fen() });\r\n                }\r\n            }\r\n            this.gameOver(this.chess);\r\n            this.check(this.chess);\r\n        };\r\n\r\n        const handleMove = (e) => {\r\n            let target;\r\n            if (typeof e === 'string') {\r\n                target = e;\r\n            } else {\r\n                target = e.target.parentNode.id;\r\n            }\r\n            this.setState({ targetPanel: target });\r\n            if (this.state.targetPeice !== null) {\r\n                let { fromPan, coords } = this.formatMove(this.state.peicePanel, target);\r\n                let pMove = this.checkMove(this.chess.fen());\r\n                if (pMove) {\r\n                    if (this.checkPromo(fromPan)) {\r\n                        this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                        this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                    } else {\r\n                        this.chess.move({ from: `${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, to: `${xAxis[coords[0]]}${yAxis[coords[1]]}` });\r\n                        this.setState({ prevMove: [`${xAxis[fromPan[0]]}${yAxis[fromPan[1]]}`, `${xAxis[coords[0]]}${yAxis[coords[1]]}`] });\r\n                    }\r\n                    if (this.state.currentFen === this.chess.fen()) {\r\n                    } else {\r\n                        let currentmove = this.chess.fen();\r\n                        let matchRoom = this.state.matchRoom;\r\n                        if (this.state.currentFen !== this.chess.fen()) {\r\n                            this.setState({ movesMade: this.state.movesMade + 1 });\r\n                            socket.emit('sendMove', { currentmove, matchRoom });\r\n                        }\r\n                        this.setState({ currentFen: this.chess.fen() });\r\n                    }\r\n                }\r\n                this.highlightPanels(target);\r\n                this.setState({ targetPeice: null });\r\n                this.setState({ peicePanel: null });\r\n            }\r\n            this.gameOver(this.chess);\r\n            this.check(this.chess);\r\n        };\r\n        if (this.state.joinedMatch) {\r\n            return (\r\n                <div>\r\n                    <div className=\"boardContainer\">\r\n                        <ul className=\"playerDetails\">\r\n                            <li>\r\n                                <img src={this.props.opponent.opponent.imageUrl} alt=\"icon\" className=\"gameIcon\" />\r\n                            </li>\r\n                            <li>\r\n                                <a className=\"gameHandle\"> {this.props.opponent.opponent.handle}</a>\r\n                            </li>\r\n                        </ul>\r\n                        <Chessboard getPeice={getPeice} player={this.state.player} onMove={handleMove} handleDrag={handleDrag} currentFen={this.state.currentFen} />\r\n                        <ul className=\"playerDetails\">\r\n                            <li>\r\n                                <img src={this.props.user.credentials.imageUrl} alt=\"icon\" className=\"gameIcon\" />\r\n                            </li>\r\n                            <li>\r\n                                <a className=\"gameHandle\"> {this.props.user.credentials.handle}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    {this.state.promo && (\r\n                        <div className=\"promotion\">\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.choosePromo('q');\r\n                                }}\r\n                            >\r\n                                Queen\r\n                            </button>\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.choosePromo('r');\r\n                                }}\r\n                            >\r\n                                Rook\r\n                            </button>\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.choosePromo('b');\r\n                                }}\r\n                            >\r\n                                Bishop\r\n                            </button>\r\n                            <button\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                    this.choosePromo('n');\r\n                                }}\r\n                            >\r\n                                Knight\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    {this.state.won && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Won</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.draw && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>Draw</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.lost && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Lost</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.inCheck && <h1 className=\"alert\">Check</h1>}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{ textAlign: 'center' }} className=\"BG\">\r\n                    <nav>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/app\">\r\n                                    <h3 className=\"pageTitle \">boredGames</h3>\r\n                                </Link>\r\n                            </li>\r\n                            <li></li>\r\n                        </ul>\r\n                    </nav>\r\n                    <h3 className=\"popGames\">Chess</h3>\r\n                    <div className=\"divider\"></div>\r\n                    {this.state.user && !this.state.loading && (\r\n                        <div>\r\n                            <button className=\"btn\" onClick={newGame}>\r\n                                Find Match\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    {this.state.user && this.state.loading && (\r\n                        <button className=\"btn\" onClick={stopSearch}>\r\n                            Cancel search\r\n                        </button>\r\n                    )}\r\n                    {this.state.loading && <h3 className=\"load\">Loading...</h3>}\r\n                    <h4 style={{ marginBottom: '1rem', color: 'white' }}>Players online: {this.state.onlinePlayers}</h4>\r\n                    <div>\r\n                        <h3 className=\"popGames\">Custom Match</h3>\r\n                        <button className=\"btn\" onClick={makeRoom}>\r\n                            Generate Code\r\n                        </button>\r\n                        {this.state.customRoom && <h3>{this.state.customRoom}</h3>}\r\n                        <div className=\"inputCode\">\r\n                            <form noValidate onSubmit={this.customGame}>\r\n                                <input value={this.state.users} id=\"code\" type=\"text\" name=\"code\" className=\"input\" placeholder=\"input code\" onChange={this.handleChange} />\r\n                                <button type=\"submit\" className=\"btn\">\r\n                                    Join\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    opponent: state.opponent,\r\n    stats: state.statistics.stats,\r\n});\r\n\r\nChessgame.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    statistics: PropTypes.object.isRequired,\r\n    opponent: PropTypes.object.isRequired,\r\n    setOpponent: PropTypes.func.isRequired,\r\n    setUserStats: PropTypes.func.isRequired,\r\n    getUserStats: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { setOpponent, setUserStats, getUserStats })(Chessgame);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setOpponent } from '../../redux/actions/opponentActions';\r\nimport { setUserStats, getUserStats } from '../../redux/actions/userActions';\r\nimport io from 'socket.io-client';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ConnectBoard from './ConnectBoard';\r\nimport './connectboard.css';\r\n\r\nlet socket;\r\n\r\nclass Connectgame extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentBoard: null,\r\n            user: null,\r\n            opponent: {},\r\n            joinedRoom: false,\r\n            joinedMatch: false,\r\n            matchRoom: null,\r\n            player: null,\r\n            myMove: null,\r\n            loading: false,\r\n            lost: false,\r\n            won: false,\r\n            draw: false,\r\n            startTime: null,\r\n            movesMade: 0,\r\n            onlinePlayers: 0,\r\n            roomCode: '',\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    customGame = (e) => {\r\n        e.preventDefault();\r\n        let room = this.state.code;\r\n        if (this.state.joinedRoom) {\r\n            const user = this.state.user;\r\n            socket.emit('waiting', { user, room });\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user.credentials.handle !== prevProps.user.credentials.handle) {\r\n            socket.emit('disconnected');\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'connect';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //socket = io('http://192.168.1.106:5000' || 'http://localhost:5000'); //use when developing\r\n        socket = io(); // use when deploying to heroku\r\n\r\n        if (this.props.user.credentials.handle) {\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'connect';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n\r\n        socket.on('joinedRoom', (data) => {\r\n            this.setState({ joinedRoom: data });\r\n            console.log(`joined ${data}`);\r\n        });\r\n\r\n        socket.on('loading', (data) => {\r\n            this.setState({ loading: data });\r\n        });\r\n\r\n        socket.on('joinedMatch', (room) => {\r\n            this.setState({\r\n                currentBoard: [\r\n                    [0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0],\r\n                ],\r\n            });\r\n            let time = new Date();\r\n            this.setState({ startTime: time });\r\n            this.setState({ joinedMatch: true });\r\n            this.setState({ matchRoom: room });\r\n            this.props.getUserStats();\r\n            console.log(`joined match ${room}`);\r\n        });\r\n\r\n        socket.on('player', (player) => {\r\n            this.setState({ player: player.colour });\r\n            this.gameOpponent(player.opp);\r\n            if (player.colour === 'white') {\r\n                this.setState({ myMove: true });\r\n            } else {\r\n                this.setState({ myMove: false });\r\n            }\r\n        });\r\n\r\n        socket.on('sendMove', (move) => {\r\n            this.onlineMove(move);\r\n            this.gameOver(move);\r\n        });\r\n\r\n        socket.on('numOnline', (num) => {\r\n            this.setState({ onlinePlayers: num });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.emit('disconnected');\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    gameOpponent(user) {\r\n        this.props.setOpponent(user);\r\n    }\r\n\r\n    onlineMove(move) {\r\n        this.setState({ currentBoard: move });\r\n        this.setState({ myMove: true });\r\n        console.log('moved');\r\n    }\r\n\r\n    updateStats(win) {\r\n        let finalTime = new Date();\r\n        let elapsed = (finalTime.getTime() - this.state.startTime.getTime()) / 1000;\r\n        let placeholder = this.props.stats;\r\n        placeholder.connect4.gamesPlayed = placeholder.connect4.gamesPlayed + 1;\r\n        placeholder.connect4.hoursPlayed = placeholder.connect4.hoursPlayed + elapsed;\r\n        placeholder.connect4.movesMade = placeholder.connect4.movesMade + this.state.movesMade;\r\n        if (win) {\r\n            placeholder.connect4.gamesWon = placeholder.connect4.gamesWon + 1;\r\n            placeholder.connect4.winTimes = placeholder.connect4.winTimes + elapsed;\r\n            placeholder.connect4.winMoves = placeholder.connect4.winMoves + this.state.movesMade;\r\n            placeholder.recent.winLoss = 'Win';\r\n        } else {\r\n            placeholder.recent.winLoss = 'Loss';\r\n        }\r\n        placeholder.recent.game = 'Connect 4';\r\n        placeholder.recent.movesMade = this.state.movesMade;\r\n        placeholder.recent.opponent = this.props.opponent.opponent.handle;\r\n        placeholder.recent.timePlayed = elapsed;\r\n\r\n        this.props.setUserStats(placeholder);\r\n    }\r\n\r\n    gameOver(board) {\r\n        let yellow;\r\n        let red;\r\n        let count;\r\n        for (let i = 0; i < 7; i++) {\r\n            for (let j = 0; j < 6; j++) {\r\n                if (board[i][j] === 1) {\r\n                    red++;\r\n                    count++;\r\n                } else {\r\n                    red = 0;\r\n                }\r\n\r\n                if (board[i][j] === 2) {\r\n                    yellow++;\r\n                    count++;\r\n                } else {\r\n                    yellow = 0;\r\n                }\r\n\r\n                if (yellow >= 4) {\r\n                    if (this.state.player === 'black') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n                if (red >= 4) {\r\n                    if (this.state.player === 'white') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n                if (count >= 42) {\r\n                    this.setState({ draw: true });\r\n                    this.setState({ myMove: false });\r\n                    this.updateStats(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            for (let j = 0; j < 7; j++) {\r\n                if (board[j][i] === 1) {\r\n                    red++;\r\n                } else {\r\n                    red = 0;\r\n                }\r\n\r\n                if (board[j][i] === 2) {\r\n                    yellow++;\r\n                } else {\r\n                    yellow = 0;\r\n                }\r\n\r\n                if (yellow >= 4) {\r\n                    if (this.state.player === 'black') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n                if (red >= 4) {\r\n                    if (this.state.player === 'white') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 7; j++) {\r\n                if (i + j >= 6) {\r\n                    break;\r\n                }\r\n\r\n                if (board[j][i + j] === 1) {\r\n                    red++;\r\n                } else {\r\n                    red = 0;\r\n                }\r\n\r\n                if (board[j][i + j] === 2) {\r\n                    yellow++;\r\n                } else {\r\n                    yellow = 0;\r\n                }\r\n\r\n                if (yellow >= 4) {\r\n                    if (this.state.player === 'black') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n                if (red >= 4) {\r\n                    if (this.state.player === 'white') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i < 4; i++) {\r\n            for (let j = 0; j < 7; j++) {\r\n                if (i + j >= 7) {\r\n                    break;\r\n                }\r\n\r\n                if (board[i + j][j] === 1) {\r\n                    red++;\r\n                } else {\r\n                    red = 0;\r\n                }\r\n\r\n                if (board[i + j][j] === 2) {\r\n                    yellow++;\r\n                } else {\r\n                    yellow = 0;\r\n                }\r\n\r\n                if (yellow >= 4) {\r\n                    if (this.state.player === 'black') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n                if (red >= 4) {\r\n                    if (this.state.player === 'white') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 7; j++) {\r\n                if (i + j >= 6) {\r\n                    break;\r\n                }\r\n\r\n                if (board[5 - j][i + j] === 1) {\r\n                    red++;\r\n                } else {\r\n                    red = 0;\r\n                }\r\n\r\n                if (board[5 - j][i + j] === 2) {\r\n                    yellow++;\r\n                } else {\r\n                    yellow = 0;\r\n                }\r\n\r\n                if (yellow >= 4) {\r\n                    if (this.state.player === 'black') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n                if (red >= 4) {\r\n                    if (this.state.player === 'white') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i < 4; i++) {\r\n            for (let j = 0; j < 7; j++) {\r\n                if (i + j >= 7) {\r\n                    break;\r\n                }\r\n\r\n                if (board[6 - (i + j)][j] === 1) {\r\n                    red++;\r\n                } else {\r\n                    red = 0;\r\n                }\r\n\r\n                if (board[6 - (i + j)][j] === 2) {\r\n                    yellow++;\r\n                } else {\r\n                    yellow = 0;\r\n                }\r\n\r\n                if (yellow >= 4) {\r\n                    if (this.state.player === 'black') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n                if (red >= 4) {\r\n                    if (this.state.player === 'white') {\r\n                        this.setState({ won: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(true);\r\n                    } else {\r\n                        this.setState({ lost: true });\r\n                        this.setState({ myMove: false });\r\n                        this.updateStats(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const newGame = () => {\r\n            if (this.state.joinedRoom) {\r\n                const user = this.state.user;\r\n                const room = 'connect';\r\n                socket.emit('waiting', { user, room });\r\n            }\r\n        };\r\n\r\n        const stopSearch = () => {\r\n            if (this.state.joinedRoom) {\r\n                const user = this.state.user;\r\n                const room = 'connect';\r\n                socket.emit('stopSearch', { user, room });\r\n            }\r\n        };\r\n\r\n        const makeRoom = () => {\r\n            var result = '';\r\n            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n            var charactersLength = characters.length;\r\n            for (var i = 0; i < 6; i++) {\r\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n            }\r\n            this.setState({ customRoom: result });\r\n        };\r\n\r\n        const handleClick = (e) => {\r\n            let targetCol = e.target.id;\r\n            let matchRoom = this.state.matchRoom;\r\n            let colour;\r\n            let allowMove = false;\r\n            if (this.state.player === 'white') {\r\n                colour = 1;\r\n            } else {\r\n                colour = 2;\r\n            }\r\n            targetCol = parseInt(targetCol);\r\n            let currentmove = this.state.currentBoard;\r\n            for (let i = 5; i >= 0; i--) {\r\n                if (currentmove[targetCol][i] === 0) {\r\n                    currentmove[targetCol][i] = colour;\r\n                    allowMove = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this.state.myMove && allowMove) {\r\n                this.setState({ movesMade: this.state.movesMade + 1 });\r\n                socket.emit('sendMove', { currentmove, matchRoom });\r\n                this.setState({ currentBoard: currentmove });\r\n                this.setState({ myMove: false });\r\n                this.gameOver(currentmove);\r\n            }\r\n        };\r\n        if (this.state.joinedMatch) {\r\n            return (\r\n                <div>\r\n                    <div className=\"boardContainer\">\r\n                        <ul className=\"playerDetails\">\r\n                            <li>\r\n                                <img src={this.props.opponent.opponent.imageUrl} alt=\"icon\" className=\"gameIcon\" />\r\n                            </li>\r\n                            <li>\r\n                                <a className=\"gameHandle\"> {this.props.opponent.opponent.handle}</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"interactive\">\r\n                            <div className=\"clickDetect\">\r\n                                <div className=\"clicker\" id=\"0col\" onClick={handleClick}></div>\r\n                                <div className=\"clicker\" id=\"1col\" onClick={handleClick}></div>\r\n                                <div className=\"clicker\" id=\"2col\" onClick={handleClick}></div>\r\n                                <div className=\"clicker\" id=\"3col\" onClick={handleClick}></div>\r\n                                <div className=\"clicker\" id=\"4col\" onClick={handleClick}></div>\r\n                                <div className=\"clicker\" id=\"5col\" onClick={handleClick}></div>\r\n                                <div className=\"clicker\" id=\"6col\" onClick={handleClick}></div>\r\n                            </div>\r\n                            <ConnectBoard currentBoard={this.state.currentBoard} />\r\n                        </div>\r\n                        <ul className=\"playerDetails\">\r\n                            <li>\r\n                                <img src={this.props.user.credentials.imageUrl} alt=\"icon\" className=\"gameIcon\" />\r\n                            </li>\r\n                            <li>\r\n                                <a className=\"gameHandle\"> {this.props.user.credentials.handle}</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    {this.state.won && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Won</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.draw && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>Draw</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.lost && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Lost</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{ textAlign: 'center' }} className=\"BG\">\r\n                    <nav>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/app\">\r\n                                    <h3 className=\"pageTitle \">boredGames</h3>\r\n                                </Link>\r\n                            </li>\r\n                            <li></li>\r\n                        </ul>\r\n                    </nav>\r\n                    <h3 className=\"popGames\">Connect</h3>\r\n                    <div className=\"divider\"></div>\r\n                    {this.state.user && !this.state.loading && (\r\n                        <div>\r\n                            <button className=\"btn\" onClick={newGame}>\r\n                                Find Match\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    {this.state.user && this.state.loading && (\r\n                        <button className=\"btn\" onClick={stopSearch}>\r\n                            Cancel search\r\n                        </button>\r\n                    )}\r\n                    {this.state.loading && <h3 className=\"load\">Loading...</h3>}\r\n                    <h4 style={{ marginBottom: '1rem', color: 'white' }}>Players online: {this.state.onlinePlayers}</h4>\r\n\r\n                    <div>\r\n                        <h3 className=\"popGames\">Custom Match</h3>\r\n                        <button className=\"btn\" onClick={makeRoom}>\r\n                            Generate Code\r\n                        </button>\r\n                        {this.state.customRoom && <h3>{this.state.customRoom}</h3>}\r\n                        <div className=\"inputCode\">\r\n                            <form noValidate onSubmit={this.customGame}>\r\n                                <input value={this.state.users} id=\"code\" type=\"text\" name=\"code\" className=\"input\" placeholder=\"input code\" onChange={this.handleChange} />\r\n                                <button type=\"submit\" className=\"btn\">\r\n                                    Join\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    opponent: state.opponent,\r\n    stats: state.statistics.stats,\r\n});\r\n\r\nConnectgame.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    statistics: PropTypes.object.isRequired,\r\n    opponent: PropTypes.object.isRequired,\r\n    setOpponent: PropTypes.func.isRequired,\r\n    setUserStats: PropTypes.func.isRequired,\r\n    getUserStats: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { setOpponent, setUserStats, getUserStats })(Connectgame);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { setOpponent } from '../../redux/actions/opponentActions';\r\nimport { setUserStats, getUserStats } from '../../redux/actions/userActions';\r\nimport io from 'socket.io-client';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './battleships.css';\r\nimport Ship from './Ship';\r\nimport Panel from './Panel';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nlet socket;\r\n\r\nexport class BattleGame extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            user: null,\r\n            opponent: {},\r\n            joinedRoom: false,\r\n            joinedMatch: false,\r\n            matchRoom: null,\r\n            player: null,\r\n            myMove: null,\r\n            loading: false,\r\n            lost: false,\r\n            won: false,\r\n            draw: false,\r\n            startTime: null,\r\n            movesMade: 0,\r\n            onlinePlayers: 0,\r\n            roomCode: '',\r\n            userHits: 0,\r\n            oppHits: 0,\r\n            destroyerRotate: false,\r\n            submarineRotate: false,\r\n            cruiserRotate: false,\r\n            battleshipRotate: false,\r\n            carrierRotate: false,\r\n            destroyerPos: null,\r\n            submarinePos: null,\r\n            cruiserPos: null,\r\n            battleshipPos: null,\r\n            carrierPos: null,\r\n            boardValid: false,\r\n            boardReady: false,\r\n            board: [\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            ],\r\n            placeholderBoard: [\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            ],\r\n            placeholderOppBoard: [\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            ],\r\n            opBoard: null,\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    customGame = (e) => {\r\n        e.preventDefault();\r\n        let room = this.state.code;\r\n        if (this.state.joinedRoom) {\r\n            const user = this.state.user;\r\n            socket.emit('waiting', { user, room });\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.user.credentials.handle !== prevProps.user.credentials.handle) {\r\n            socket.emit('disconnected');\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'connect';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //socket = io('http://192.168.1.106:5000' || 'http://localhost:5000'); //use when developing\r\n        socket = io(); // use when deploying to heroku\r\n\r\n        if (this.props.user.credentials.handle) {\r\n            const user = this.props.user.credentials.handle;\r\n            const room = 'connect';\r\n            console.log(`${user} joining ${room}`);\r\n            socket.emit('joinRoom', { user, room });\r\n            this.setState({ user: this.props.user.credentials.handle });\r\n        }\r\n\r\n        socket.on('joinedRoom', (data) => {\r\n            let time = new Date();\r\n            this.setState({ startTime: time });\r\n            this.setState({ joinedRoom: data });\r\n            console.log(`joined ${data}`);\r\n        });\r\n\r\n        socket.on('loading', (data) => {\r\n            this.setState({ loading: data });\r\n        });\r\n\r\n        socket.on('joinedMatch', (room) => {\r\n            this.setState({ joinedMatch: true });\r\n            this.setState({ matchRoom: room });\r\n            this.props.getUserStats();\r\n            console.log(`joined match ${room}`);\r\n        });\r\n\r\n        socket.on('player', (player) => {\r\n            this.setState({ player: player.colour });\r\n            this.gameOpponent(player.opp);\r\n            if (player.colour === 'white') {\r\n                this.setState({ myMove: true });\r\n            } else {\r\n                this.setState({ myMove: false });\r\n            }\r\n        });\r\n\r\n        socket.on('sendMove', (move) => {\r\n            console.log(move);\r\n            this.onlineMove(move);\r\n            this.gameOver();\r\n        });\r\n\r\n        socket.on('setOppBoard', (board) => {\r\n            this.setState({ opBoard: board });\r\n        });\r\n\r\n        socket.on('numOnline', (num) => {\r\n            this.setState({ onlinePlayers: num });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socket.emit('disconnected');\r\n    }\r\n\r\n    gameOpponent(user) {\r\n        this.props.setOpponent(user);\r\n    }\r\n\r\n    onlineMove(move) {\r\n        let placeholder = this.state.placeholderBoard;\r\n        let board = this.state.board;\r\n        console.log(board);\r\n        let pos = move;\r\n        if (board[pos[1]][pos[2]] === 1) {\r\n            placeholder[pos[1]][pos[2]] = 1;\r\n            this.setState({ oppHits: this.state.oppHits + 1 });\r\n        } else {\r\n            placeholder[pos[1]][pos[2]] = 2;\r\n        }\r\n        this.setState({ placeholderBoard: placeholder });\r\n        this.setState({ myMove: true });\r\n        this.gameOver();\r\n    }\r\n\r\n    changeboard() {\r\n        let count = 0;\r\n        let filled = 0;\r\n        let board = [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        ];\r\n        if (this.state.destroyerPos !== null) {\r\n            count = count + 2;\r\n            board[this.state.destroyerPos.x][this.state.destroyerPos.y] = 1;\r\n            if (this.state.destroyerRotate) {\r\n                if (this.state.destroyerPos.y + 1 < 10) {\r\n                    board[this.state.destroyerPos.x][this.state.destroyerPos.y + 1] = 1;\r\n                }\r\n            } else {\r\n                if (this.state.destroyerPos.x + 1 < 10) {\r\n                    board[this.state.destroyerPos.x + 1][this.state.destroyerPos.y] = 1;\r\n                }\r\n            }\r\n        }\r\n        if (this.state.submarinePos !== null) {\r\n            count = count + 3;\r\n            board[this.state.submarinePos.x][this.state.submarinePos.y] = 1;\r\n            if (this.state.submarineRotate) {\r\n                if (this.state.submarinePos.y + 2 < 10) {\r\n                    board[this.state.submarinePos.x][this.state.submarinePos.y + 1] = 1;\r\n                    board[this.state.submarinePos.x][this.state.submarinePos.y + 2] = 1;\r\n                }\r\n            } else {\r\n                if (this.state.submarinePos.x + 2 < 10) {\r\n                    board[this.state.submarinePos.x + 1][this.state.submarinePos.y] = 1;\r\n                    board[this.state.submarinePos.x + 2][this.state.submarinePos.y] = 1;\r\n                }\r\n            }\r\n        }\r\n        if (this.state.cruiserPos !== null) {\r\n            count = count + 3;\r\n            board[this.state.cruiserPos.x][this.state.cruiserPos.y] = 1;\r\n            if (this.state.cruiserRotate) {\r\n                if (this.state.cruiserPos.y + 2 < 10) {\r\n                    board[this.state.cruiserPos.x][this.state.cruiserPos.y + 1] = 1;\r\n                    board[this.state.cruiserPos.x][this.state.cruiserPos.y + 2] = 1;\r\n                }\r\n            } else {\r\n                if (this.state.cruiserPos.x + 2 < 10) {\r\n                    board[this.state.cruiserPos.x + 1][this.state.cruiserPos.y] = 1;\r\n                    board[this.state.cruiserPos.x + 2][this.state.cruiserPos.y] = 1;\r\n                }\r\n            }\r\n        }\r\n        if (this.state.battleshipPos !== null) {\r\n            count = count + 4;\r\n            board[this.state.battleshipPos.x][this.state.battleshipPos.y] = 1;\r\n            if (this.state.battleshipRotate) {\r\n                if (this.state.battleshipPos.y + 3 < 10) {\r\n                    board[this.state.battleshipPos.x][this.state.battleshipPos.y + 1] = 1;\r\n                    board[this.state.battleshipPos.x][this.state.battleshipPos.y + 2] = 1;\r\n                    board[this.state.battleshipPos.x][this.state.battleshipPos.y + 3] = 1;\r\n                }\r\n            } else {\r\n                if (this.state.battleshipPos.x + 3 < 10) {\r\n                    board[this.state.battleshipPos.x + 1][this.state.battleshipPos.y] = 1;\r\n                    board[this.state.battleshipPos.x + 2][this.state.battleshipPos.y] = 1;\r\n                    board[this.state.battleshipPos.x + 3][this.state.battleshipPos.y] = 1;\r\n                }\r\n            }\r\n        }\r\n        if (this.state.carrierPos !== null) {\r\n            count = count + 5;\r\n            board[this.state.carrierPos.x][this.state.carrierPos.y] = 1;\r\n            if (this.state.carrierRotate) {\r\n                if (this.state.carrierPos.y + 4 < 10) {\r\n                    board[this.state.carrierPos.x][this.state.carrierPos.y + 1] = 1;\r\n                    board[this.state.carrierPos.x][this.state.carrierPos.y + 2] = 1;\r\n                    board[this.state.carrierPos.x][this.state.carrierPos.y + 3] = 1;\r\n                    board[this.state.carrierPos.x][this.state.carrierPos.y + 4] = 1;\r\n                }\r\n            } else {\r\n                if (this.state.carrierPos.x + 4 < 10) {\r\n                    board[this.state.carrierPos.x + 1][this.state.carrierPos.y] = 1;\r\n                    board[this.state.carrierPos.x + 2][this.state.carrierPos.y] = 1;\r\n                    board[this.state.carrierPos.x + 3][this.state.carrierPos.y] = 1;\r\n                    board[this.state.carrierPos.x + 4][this.state.carrierPos.y] = 1;\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < 10; i++) {\r\n            for (let j = 0; j < 10; j++) {\r\n                if (board[i][j] === 1) {\r\n                    filled++;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (filled === count) {\r\n            this.setState({ boardValid: false });\r\n            this.setState({ board });\r\n        } else {\r\n            this.setState({ boardValid: true });\r\n        }\r\n\r\n        if (filled === 17) {\r\n            this.setState({ boardReady: true });\r\n        }\r\n    }\r\n\r\n    updateStats(win) {\r\n        let finalTime = new Date();\r\n        let elapsed = (finalTime.getTime() - this.state.startTime.getTime()) / 1000;\r\n        let placeholder = this.props.stats;\r\n        placeholder.battleships.gamesPlayed = placeholder.battleships.gamesPlayed + 1;\r\n        placeholder.battleships.hoursPlayed = placeholder.battleships.hoursPlayed + elapsed;\r\n        placeholder.battleships.movesMade = placeholder.battleships.movesMade + this.state.movesMade;\r\n        if (win) {\r\n            placeholder.battleships.gamesWon = placeholder.battleships.gamesWon + 1;\r\n            placeholder.battleships.winTimes = placeholder.battleships.winTimes + elapsed;\r\n            placeholder.battleships.winMoves = placeholder.battleships.winMoves + this.state.movesMade;\r\n            placeholder.recent.winLoss = 'Win';\r\n        } else {\r\n            placeholder.recent.winLoss = 'Loss';\r\n        }\r\n        placeholder.recent.game = 'Battleships';\r\n        placeholder.recent.movesMade = this.state.movesMade;\r\n        placeholder.recent.opponent = this.props.opponent.opponent.handle;\r\n        placeholder.recent.timePlayed = elapsed;\r\n\r\n        this.props.setUserStats(placeholder);\r\n    }\r\n\r\n    gameOver() {\r\n        if (this.state.userHits >= 17) {\r\n            this.setState({ won: true });\r\n            this.setState({ myMove: false });\r\n            this.updateStats(true);\r\n        }\r\n        if (this.state.oppHits >= 17) {\r\n            this.setState({ lost: true });\r\n            this.setState({ myMove: false });\r\n            this.updateStats(false);\r\n        }\r\n    }\r\n\r\n    checkRotate(name) {\r\n        const callChange = () => {\r\n            this.changeboard();\r\n        };\r\n        if (name === 'Destroyer') {\r\n            this.setState({ destroyerRotate: !this.state.destroyerRotate }, callChange);\r\n        } else if (name === 'Submarine') {\r\n            this.setState({ submarineRotate: !this.state.submarineRotate }, callChange);\r\n        } else if (name === 'Cruiser') {\r\n            this.setState({ cruiserRotate: !this.state.cruiserRotate }, callChange);\r\n        } else if (name === 'Battleship') {\r\n            this.setState({ battleshipRotate: !this.state.battleshipRotate }, callChange);\r\n        } else if (name === 'Carrier') {\r\n            this.setState({ carrierRotate: !this.state.carrierRotate }, callChange);\r\n        }\r\n    }\r\n\r\n    checkPos(name, Pos) {\r\n        const callChange = () => {\r\n            this.changeboard();\r\n        };\r\n        let pos = Pos.split('-');\r\n        if (name === 'Destroyer') {\r\n            if (pos.length < 2) {\r\n                this.setState({ destroyerPos: null }, callChange);\r\n            } else {\r\n                this.setState({ destroyerPos: { x: parseInt(pos[0]), y: parseInt(pos[1]) } }, callChange);\r\n            }\r\n        } else if (name === 'Submarine') {\r\n            if (pos.length < 2) {\r\n                this.setState({ submarinePos: null }, callChange);\r\n            } else {\r\n                this.setState({ submarinePos: { x: parseInt(pos[0]), y: parseInt(pos[1]) } }, callChange);\r\n            }\r\n        } else if (name === 'Cruiser') {\r\n            if (pos.length < 2) {\r\n                this.setState({ cruiserPos: null }, callChange);\r\n            } else {\r\n                this.setState({ cruiserPos: { x: parseInt(pos[0]), y: parseInt(pos[1]) } }, callChange);\r\n            }\r\n        } else if (name === 'Battleship') {\r\n            if (pos.length < 2) {\r\n                this.setState({ battleshipPos: null }, callChange);\r\n            } else {\r\n                this.setState({ battleshipPos: { x: parseInt(pos[0]), y: parseInt(pos[1]) } }, callChange);\r\n            }\r\n        } else if (name === 'Carrier') {\r\n            if (pos.length < 2) {\r\n                this.setState({ carrierPos: null }, callChange);\r\n            } else {\r\n                this.setState({ carrierPos: { x: parseInt(pos[0]), y: parseInt(pos[1]) } }, callChange);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const handleDrag = (e) => {\r\n            const { destination, source, draggableId } = e;\r\n            if (!destination) {\r\n                return;\r\n            }\r\n\r\n            //let origin = document.getElementById(source.droppableId);\r\n            let panel = document.getElementById(destination.droppableId);\r\n            let ship = document.getElementById(draggableId);\r\n            //console.log(destination.droppableId, draggableId);\r\n\r\n            this.checkPos(draggableId, destination.droppableId);\r\n\r\n            panel.appendChild(ship);\r\n        };\r\n\r\n        const handleMove = (e) => {\r\n            let placeholder = this.state.placeholderOppBoard;\r\n            let matchRoom = this.state.matchRoom;\r\n            let targetPanel = e.target.id;\r\n            let currentmove = targetPanel.split('-');\r\n            if (this.state.myMove) {\r\n                if (placeholder[currentmove[1]][currentmove[2]] === 0) {\r\n                    if (this.state.opBoard[currentmove[1]][currentmove[2]] === 1) {\r\n                        placeholder[currentmove[1]][currentmove[2]] = 1;\r\n                        this.setState({ userHits: this.state.userHits + 1 });\r\n                    } else {\r\n                        placeholder[currentmove[1]][currentmove[2]] = 2;\r\n                    }\r\n                    socket.emit('sendMove', { currentmove, matchRoom });\r\n                    this.setState({ movesMade: this.state.movesMade + 1 });\r\n                    this.setState({ placeholderOppBoard: placeholder });\r\n                    if (this.state.userHits + 1 >= 17) {\r\n                        this.setState({ won: true });\r\n                    }\r\n                    this.setState({ myMove: false });\r\n                }\r\n            }\r\n        };\r\n\r\n        const newGame = () => {\r\n            if (this.state.joinedRoom) {\r\n                const user = this.state.user;\r\n                const room = 'connect';\r\n                socket.emit('waiting', { user, room });\r\n            }\r\n        };\r\n\r\n        const stopSearch = () => {\r\n            if (this.state.joinedRoom) {\r\n                const user = this.state.user;\r\n                const room = 'connect';\r\n                socket.emit('stopSearch', { user, room });\r\n            }\r\n        };\r\n\r\n        const makeRoom = () => {\r\n            var result = '';\r\n            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n            var charactersLength = characters.length;\r\n            for (var i = 0; i < 6; i++) {\r\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n            }\r\n            this.setState({ customRoom: result });\r\n        };\r\n\r\n        const deploy = () => {\r\n            let board = this.state.board;\r\n            let matchRoom = this.state.matchRoom;\r\n\r\n            let ships = document.getElementById('ships');\r\n            let destroyer = document.getElementById('Destroyer');\r\n            let submarine = document.getElementById('Submarine');\r\n            let cruiser = document.getElementById('Cruiser');\r\n            let battleship = document.getElementById('Battleship');\r\n            let carrier = document.getElementById('Carrier');\r\n            destroyer.remove();\r\n            submarine.remove();\r\n            cruiser.remove();\r\n            battleship.remove();\r\n            carrier.remove();\r\n            ships.remove();\r\n\r\n            socket.emit('battleBoard', { board, matchRoom });\r\n            this.setState({ boardReady: false });\r\n        };\r\n\r\n        let panels = [];\r\n        let panelsOpp = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            for (let j = 0; j < 10; j++) {\r\n                if (this.state.placeholderBoard[j][i] === 0) {\r\n                    panels.push(<Panel key={j + i * 10} location={`${j}-${i}`}></Panel>);\r\n                }\r\n                if (this.state.placeholderBoard[j][i] === 1) {\r\n                    panels.push(<Panel key={j + i * 10} location={`${j}-${i}`} color={'orangered'}></Panel>);\r\n                }\r\n                if (this.state.placeholderBoard[j][i] === 2) {\r\n                    panels.push(<Panel key={j + i * 10} location={`${j}-${i}`} color={'#333'}></Panel>);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            for (let j = 0; j < 10; j++) {\r\n                if (this.state.placeholderOppBoard[j][i] === 0) {\r\n                    panelsOpp.push(<div key={j + i * 10} id={`-${j}-${i}`} className=\"shipPanel\" onClick={handleMove}></div>);\r\n                }\r\n                if (this.state.placeholderOppBoard[j][i] === 1) {\r\n                    panelsOpp.push(<div key={j + i * 10} id={`-${j}-${i}`} className=\"shipPanel\" onClick={handleMove} style={{ backgroundColor: 'orangered' }}></div>);\r\n                }\r\n                if (this.state.placeholderOppBoard[j][i] === 2) {\r\n                    panelsOpp.push(<div key={j + i * 10} id={`-${j}-${i}`} className=\"shipPanel\" onClick={handleMove} style={{ backgroundColor: '#333' }}></div>);\r\n                }\r\n            }\r\n        }\r\n        if (this.state.joinedMatch) {\r\n            return (\r\n                <div style={{ width: '100%', height: '100vh' }}>\r\n                    <DragDropContext onDragEnd={handleDrag}>\r\n                        <div className=\"homeBattlefield\">\r\n                            <h3>Home fleet</h3>\r\n                            <div className=\"ships\" id=\"ships\">\r\n                                <Panel location={'dockDestroyer'}>\r\n                                    <Ship id=\"Destroyer\" index={0} length={2} checkRotate={this.checkRotate.bind(this)} />\r\n                                </Panel>\r\n                                <Panel location={'dockSubmarine'}>\r\n                                    <Ship id=\"Submarine\" index={1} length={3} checkRotate={this.checkRotate.bind(this)} />\r\n                                </Panel>\r\n                                <Panel location={'dockCruiser'}>\r\n                                    <Ship id=\"Cruiser\" index={2} length={3} checkRotate={this.checkRotate.bind(this)} />\r\n                                </Panel>\r\n                                <Panel location={'dockBattleship'}>\r\n                                    <Ship id=\"Battleship\" index={3} length={4} checkRotate={this.checkRotate.bind(this)} />\r\n                                </Panel>\r\n                                <Panel location={'dockCarrier'}>\r\n                                    <Ship id=\"Carrier\" index={4} length={5} checkRotate={this.checkRotate.bind(this)} />\r\n                                </Panel>\r\n                            </div>\r\n                            <div className={this.state.boardValid ? 'battlefield nonValid' : 'battlefield'}>{panels}</div>\r\n                            {this.state.boardReady && (\r\n                                <button className=\"deploy\" onClick={deploy}>\r\n                                    Deploy fleet\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                        <div id=\"oppBoard\">\r\n                            <h3>Opponent fleet</h3>\r\n                            <div className=\"battlefield\">\r\n                                {!this.state.opBoard && <div style={{ width: 'inherit', height: 'inherit', backgroundColor: 'rgba(0,0,0,0.4)', color: 'white' }}>waiting</div>}\r\n\r\n                                {this.state.opBoard && panelsOpp}\r\n                            </div>\r\n                        </div>\r\n                    </DragDropContext>\r\n                    {this.state.won && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Won</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.draw && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>Draw</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                    {this.state.lost && (\r\n                        <div className=\"endScreen\">\r\n                            <h3>You Lost</h3>\r\n                            <Link to=\"/games\" className=\"btn\">\r\n                                Back to games\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{ textAlign: 'center' }} className=\"BG\">\r\n                    <nav>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/app\">\r\n                                    <h3 className=\"pageTitle \">boredGames</h3>\r\n                                </Link>\r\n                            </li>\r\n                            <li></li>\r\n                        </ul>\r\n                    </nav>\r\n                    <h3 className=\"popGames\">Battleships</h3>\r\n                    <div className=\"divider\"></div>\r\n                    {this.state.user && !this.state.loading && (\r\n                        <div>\r\n                            <button className=\"btn\" onClick={newGame}>\r\n                                Find Match\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    {this.state.user && this.state.loading && (\r\n                        <button className=\"btn\" onClick={stopSearch}>\r\n                            Cancel search\r\n                        </button>\r\n                    )}\r\n                    {this.state.loading && <h3 className=\"load\">Loading...</h3>}\r\n                    <h4 style={{ marginBottom: '1rem', color: 'white' }}>Players online: {this.state.onlinePlayers}</h4>\r\n\r\n                    <div>\r\n                        <h3 className=\"popGames\">Custom Match</h3>\r\n                        <button className=\"btn\" onClick={makeRoom}>\r\n                            Generate Code\r\n                        </button>\r\n                        {this.state.customRoom && <h3>{this.state.customRoom}</h3>}\r\n                        <div className=\"inputCode\">\r\n                            <form noValidate onSubmit={this.customGame}>\r\n                                <input value={this.state.users} id=\"code\" type=\"text\" name=\"code\" className=\"input\" placeholder=\"input code\" onChange={this.handleChange} />\r\n                                <button type=\"submit\" className=\"btn\">\r\n                                    Join\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    stats: state.statistics.stats,\r\n    opponent: state.opponent,\r\n});\r\n\r\nBattleGame.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    statistics: PropTypes.object.isRequired,\r\n    opponent: PropTypes.object.isRequired,\r\n    setOpponent: PropTypes.func.isRequired,\r\n    setUserStats: PropTypes.func.isRequired,\r\n    getUserStats: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { setOpponent, setUserStats, getUserStats })(BattleGame);\r\n","import { SET_USER, SET_STATS, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED } from '../types';\r\nimport firebase from './../../services/util/config';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { validateSignupData, validateLoginData, reduceUserDetails } from './../../services/util/validators';\r\n\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst realdb = firebase.database();\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n\r\n    const { valid, errors } = validateLoginData(userData);\r\n\r\n    if (!valid) {\r\n        dispatch({ type: SET_ERRORS, payload: errors });\r\n    } else {\r\n        auth.signInWithEmailAndPassword(userData.email, userData.password)\r\n            .then(() => {\r\n                dispatch(getUserData());\r\n                dispatch(getUserStats());\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                history.push('/app');\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: SET_ERRORS, payload: 'Wrong credentials, please try again' });\r\n            });\r\n    }\r\n};\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    let userId;\r\n    const noImg = 'no-img.png';\r\n    const { valid, errors } = validateSignupData(newUserData);\r\n\r\n    if (!valid) {\r\n        dispatch({ type: SET_ERRORS, payload: errors });\r\n    } else {\r\n        db.doc(`/users/${newUserData.handle}`)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    dispatch({ type: SET_ERRORS, payload: 'this username already exists' });\r\n                } else {\r\n                    return auth.createUserWithEmailAndPassword(newUserData.email, newUserData.password);\r\n                }\r\n            })\r\n            .then((data) => {\r\n                userId = data.user.uid;\r\n            })\r\n            .then(() => {\r\n                const chess = {\r\n                    gamesPlayed: 0,\r\n                    hoursPlayed: 0,\r\n                    gamesWon: 0,\r\n                    winTimes: 0,\r\n                    winMoves: 0,\r\n                    movesMade: 0,\r\n                };\r\n                const connect4 = {\r\n                    gamesPlayed: 0,\r\n                    hoursPlayed: 0,\r\n                    gamesWon: 0,\r\n                    winTimes: 0,\r\n                    winMoves: 0,\r\n                    movesMade: 0,\r\n                };\r\n                const battleships = {\r\n                    gamesPlayed: 0,\r\n                    hoursPlayed: 0,\r\n                    gamesWon: 0,\r\n                    winTimes: 0,\r\n                    winMoves: 0,\r\n                    movesMade: 0,\r\n                };\r\n                const recent = {\r\n                    timePlayed: 0,\r\n                    winLoss: 'none',\r\n                    movesMade: 0,\r\n                    opponent: 'none',\r\n                    game: 'none',\r\n                };\r\n                const stats = {\r\n                    recent,\r\n                    chess,\r\n                    connect4,\r\n                    battleships,\r\n                    userId,\r\n                };\r\n                const userCredentials = {\r\n                    handle: newUserData.handle,\r\n                    joined: new Date().toISOString(),\r\n                    imageUrl: `https://firebasestorage.googleapis.com/v0/b/boredgames-28c8e.appspot.com/o/${noImg}?alt=media`,\r\n                    userId,\r\n                };\r\n                db.doc(`/users/${newUserData.handle}`).set(userCredentials);\r\n                db.doc(`/stats/${newUserData.handle}`).set(stats);\r\n                dispatch(getUserData());\r\n                dispatch(getUserStats());\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                history.push('/app');\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                if (err.code === 'auth/email-already-in-use') {\r\n                    dispatch({ type: SET_ERRORS, payload: 'email already in use' });\r\n                } else {\r\n                    dispatch({ type: SET_ERRORS, payload: 'Something went wrong, please try again ' });\r\n                }\r\n            });\r\n    }\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    var user = firebase.auth().currentUser;\r\n    realdb.ref(`/status/${user.uid}`).set('offline');\r\n    firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n            dispatch({ type: SET_UNAUTHENTICATED });\r\n        })\r\n        .catch(function (err) {\r\n            dispatch({ type: SET_ERRORS, payload: err.message });\r\n        });\r\n};\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    var user = firebase.auth().currentUser;\r\n    let uid;\r\n    let userData = {};\r\n\r\n    if (user != null) {\r\n        uid = user.uid;\r\n        db.collection('users')\r\n            .where('userId', '==', uid)\r\n            .limit(1)\r\n            .get()\r\n            .then((data) => {\r\n                userData.credentials = data.docs[0].data();\r\n                dispatch({ type: SET_USER, payload: userData });\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                dispatch({ type: SET_ERRORS, payload: err.message });\r\n            });\r\n    }\r\n};\r\n\r\nexport const getUserStats = () => (dispatch) => {\r\n    var user = firebase.auth().currentUser;\r\n    let uid;\r\n    let userData = {};\r\n\r\n    if (user != null) {\r\n        uid = user.uid;\r\n        db.collection('stats')\r\n            .where('userId', '==', uid)\r\n            .limit(1)\r\n            .get()\r\n            .then((data) => {\r\n                userData.stats = data.docs[0].data();\r\n                dispatch({ type: SET_STATS, payload: userData });\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n                dispatch({ type: SET_ERRORS, payload: err.message });\r\n            });\r\n    }\r\n};\r\n\r\nexport const setUserStats = (stats) => (dispatch) => {\r\n    const user = firebase.auth().currentUser.uid;\r\n    let handle;\r\n    db.collection('users')\r\n        .where('userId', '==', user)\r\n        .limit(1)\r\n        .get()\r\n        .then((data) => {\r\n            handle = data.docs[0].data().handle;\r\n            db.collection('stats')\r\n                .doc(`${handle}`)\r\n                .set(stats)\r\n                .then(() => {\r\n                    dispatch(getUserStats());\r\n                });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err.code });\r\n        });\r\n};\r\n","import React, { Component } from 'react';\r\nimport './../styles/form.css';\r\nimport './../styles/Sign-Log.css';\r\nimport Loader from './../components/Loader';\r\nimport bishop from '../styles/Bishop.svg';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nexport class Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        };\r\n        this.props.loginUser(userData, this.props.history);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const {\r\n            UI: { loading },\r\n        } = this.props;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"log-sign\">\r\n                <h1 className=\"log-title\">boredGames</h1>\r\n                <div className=\"form-contain\">\r\n                    <img src={bishop} className=\"bishop\" />\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <h3 className=\"form-title\">Login</h3>\r\n                        <div className={errors.email || errors.general ? 'error field' : 'field'}>\r\n                            <input value={this.state.email} id=\"email\" type=\"email\" name=\"email\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                            <label htmlFor=\"email\" className=\"label\">\r\n                                Email\r\n                            </label>\r\n                        </div>\r\n                        <p className=\"errors error\">{errors.email}</p>\r\n                        <div className={errors.password || errors.general ? 'error field' : 'field'}>\r\n                            <input value={this.state.password} id=\"password\" type=\"password\" name=\"password\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                            <label htmlFor=\"password\" className=\"label\">\r\n                                Password\r\n                            </label>\r\n                        </div>\r\n                        <p className=\"errors error\">{errors.password}</p>\r\n                        <p className=\"errors error\">{errors.general}</p>\r\n                        <button type=\"submit\" className=\"submit\">\r\n                            Submit\r\n                        </button>\r\n                        <p className=\"authSwitch\">\r\n                            don't have an account?{' '}\r\n                            <Link to=\"/signup\" className=\"footerLink\">\r\n                                Signup\r\n                            </Link>\r\n                        </p>\r\n                        {this.props.UI.loading && <Loader size=\"75px\" ball=\"15px\" />}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Component } from 'react';\r\nimport './../styles/form.css';\r\nimport Loader from './../components/Loader';\r\nimport bishop from '../styles/Bishop.svg';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n\r\nexport class signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            loading: false,\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle,\r\n        };\r\n        this.props.signupUser(userData, this.props.history);\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { loading, errors } = this.state;\r\n        return (\r\n            <div className=\"log-sign\">\r\n                <h1 className=\"log-title\">boredGames</h1>\r\n                <div className=\"form-contain\">\r\n                    <img src={bishop} className=\"bishop\" />\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <h3 className=\"form-title\">Sign Up</h3>\r\n                        <div className={errors.email || errors.general ? 'error field' : 'field'}>\r\n                            <input value={this.state.email} id=\"email\" type=\"email\" name=\"email\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                            <label htmlFor=\"email\" className=\"label\">\r\n                                Email\r\n                            </label>\r\n                        </div>\r\n                        <p className=\"errors error\">{errors.email}</p>\r\n                        <div className=\"field\" className={errors.password || errors.general ? 'error field' : 'field'}>\r\n                            <input value={this.state.password} id=\"password\" type=\"password\" name=\"password\" className=\"input\" placeholder=\" \" onChange={this.handleChange} />\r\n                            <label htmlFor=\"password\" className=\"label\">\r\n                                Password\r\n                            </label>\r\n                        </div>\r\n                        <p className=\"errors error\">{errors.password}</p>\r\n                        <div className={errors.confirmPassword || errors.general ? 'error field' : 'field'}>\r\n                            <input\r\n                                value={this.state.confirmPassword}\r\n                                id=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n                                className=\"input\"\r\n                                placeholder=\" \"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <label htmlFor=\"password\" className=\"label\">\r\n                                Confirm Password\r\n                            </label>\r\n                        </div>\r\n                        <p className=\"errors error\">{errors.confirmPassword}</p>\r\n                        <div className={errors.handle || errors.general ? 'error field' : 'field'}>\r\n                            <input value={this.state.handle} id=\"handle\" type=\"text\" name=\"handle\" className=\"input\" placeholder=\" \" onChange={this.handleChange} maxlength=\"12\" />\r\n                            <label htmlFor=\"username\" className=\"label\">\r\n                                Username\r\n                            </label>\r\n                        </div>\r\n                        <p className=\"errors error\">{errors.handle}</p>\r\n                        <p className=\"errors error\">{errors.general}</p>\r\n                        <button type=\"submit\" className=\"submit\">\r\n                            Submit\r\n                        </button>\r\n                        <p className=\"authSwitch\">\r\n                            already have an accout?{' '}\r\n                            <Link to=\"/login\" className=\"footerLink\">\r\n                                Login\r\n                            </Link>\r\n                        </p>\r\n                        {this.props.UI.loading && <Loader size=\"75px\" ball=\"15px\" />}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    signupUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    signupUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, { signupUser })(signup);\r\n","import React, { Component } from 'react';\r\nimport '../styles/home.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"background\">\r\n                <div className=\"conatain\">\r\n                    <h1 className=\"title\">boredGames</h1>\r\n                    <ul className=\"buttnCont\">\r\n                        <li className=\"buttn\" id=\"log\">\r\n                            <Link to=\"/login\">Login</Link>\r\n                        </li>\r\n                        <li className=\"buttn\" id=\"sign\">\r\n                            <Link to=\"/signup\">Sign Up</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import { SET_FRIEND, SET_FRIENDS, SEARCH_FRIEND, IS_FRIEND, NOT_FRIEND, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, APPEND_FRIEND } from '../types';\r\nimport firebase from './../../services/util/config';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst db = firebase.firestore();\r\nconst realdb = firebase.database();\r\n\r\nexport const checkFriend = (friend) => (dispatch) => {\r\n    const user = firebase.auth().currentUser.uid;\r\n    let handle;\r\n    db.collection('users')\r\n        .where('userId', '==', user)\r\n        .limit(1)\r\n        .get()\r\n        .then((data) => {\r\n            handle = data.docs[0].data().handle;\r\n            db.doc(`/relations/${handle}${friend}`)\r\n                .get()\r\n                .then((doc) => {\r\n                    if (doc.exists) {\r\n                        dispatch({ type: IS_FRIEND });\r\n                    } else {\r\n                        dispatch({ type: NOT_FRIEND });\r\n                    }\r\n                });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err.code });\r\n        });\r\n};\r\n\r\nexport const searchUser = (user) => (dispatch) => {\r\n    let userData = {};\r\n    dispatch({ type: LOADING_UI });\r\n    db.doc(`/users/${user}`)\r\n        .get()\r\n        .then((doc) => {\r\n            userData.searchedFriend = doc.data();\r\n            if (doc.exists) {\r\n                dispatch({ type: SEARCH_FRIEND, payload: userData });\r\n                dispatch({ type: CLEAR_ERRORS });\r\n            } else {\r\n                throw { friends: `${user} not found` };\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err });\r\n        });\r\n};\r\n\r\nexport const getFriend = (user) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    let data = {};\r\n    db.doc(`/users/${user}`)\r\n        .get()\r\n        .then((doc) => {\r\n            if (doc.exists) {\r\n                const uid = doc.data().userId;\r\n                const statusRef = realdb.ref('status/' + uid);\r\n                statusRef.on('value', (snapshot) => {\r\n                    if (snapshot.val()) {\r\n                        data = { ...doc.data(), status: snapshot.val() };\r\n                        dispatch({ type: APPEND_FRIEND, payload: data });\r\n                    }\r\n                });\r\n            } else {\r\n                throw { friends: `${user} not found` };\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err });\r\n        });\r\n};\r\n\r\nexport const addFriend = (friend) => (dispatch) => {\r\n    const user = firebase.auth().currentUser.uid;\r\n    let handle;\r\n    db.collection('users')\r\n        .where('userId', '==', user)\r\n        .limit(1)\r\n        .get()\r\n        .then((data) => {\r\n            handle = data.docs[0].data().handle;\r\n            db.collection('relations')\r\n                .doc(`${handle}${friend}`)\r\n                .set({\r\n                    from: `${handle}`,\r\n                    to: `${friend}`,\r\n                })\r\n                .then(() => {\r\n                    dispatch({ type: SET_FRIEND });\r\n                    dispatch(getFriends());\r\n                });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err.code });\r\n        });\r\n};\r\n\r\nexport const getFriends = () => (dispatch) => {\r\n    let resData = {};\r\n    const user = firebase.auth().currentUser.uid;\r\n    let friendList = [];\r\n\r\n    let handle;\r\n\r\n    db.collection('users')\r\n        .where('userId', '==', user)\r\n        .limit(1)\r\n        .get()\r\n        .then((data) => {\r\n            handle = data.docs[0].data().handle;\r\n            db.collection('relations')\r\n                .where('from', '==', handle)\r\n                .get()\r\n                .then((relationships) => {\r\n                    relationships.forEach((doc) => {\r\n                        friendList.push(doc.data().to);\r\n                        dispatch(getFriend(doc.data().to));\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    resData.friendList = friendList;\r\n                    if (friendList[0]) {\r\n                        dispatch({ type: SET_FRIENDS, payload: resData });\r\n                        dispatch({ type: CLEAR_ERRORS });\r\n                    } else {\r\n                        resData.friendList = 'You have no friends 😭';\r\n                        dispatch({ type: SET_FRIENDS, payload: resData });\r\n                        dispatch({ type: CLEAR_ERRORS });\r\n                    }\r\n                });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err.code });\r\n        });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logoutUser } from '../redux/actions/userActions';\r\nimport { searchUser, checkFriend, addFriend, getFriends } from '../redux/actions/friendActions';\r\nimport Loader from './../components/Loader';\r\nimport './../styles/App.css';\r\nimport './../styles/games.css';\r\nimport settings from './../styles/settings-24px.svg';\r\nimport close from './../styles/close.svg';\r\nimport chess from './game-imgs/chess.PNG';\r\nimport connect4 from './game-imgs/connect4.PNG';\r\nimport battleship from './game-imgs/battleship.PNG';\r\nimport firebase from '../services/util/config';\r\n\r\nconst realdb = firebase.database();\r\n\r\nexport class AppHome extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: '',\r\n            friends: [],\r\n            openFriend: true,\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.checkFriend(this.state.users);\r\n        this.props.searchUser(this.state.users);\r\n        this.setState({ openFriend: true });\r\n    };\r\n\r\n    addFriend = () => {\r\n        this.props.addFriend(this.props.searchedFriend.handle);\r\n    };\r\n\r\n    logout = () => {\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    closeFriend = () => {\r\n        this.setState({ openFriend: false });\r\n    };\r\n\r\n    render() {\r\n        let noStats;\r\n        let friends;\r\n        let friendArr;\r\n        let stats;\r\n        if (this.props.stats.recent) {\r\n            stats = this.props.stats;\r\n        } else {\r\n            stats = false;\r\n        }\r\n        if (typeof this.props.friendList === 'string') {\r\n            friends = this.props.friendList;\r\n        } else {\r\n            friendArr = Object.values(this.props.friendData);\r\n            let i = -1;\r\n            friends = friendArr.map((friend) => {\r\n                i++;\r\n                return (\r\n                    <li key={i}>\r\n                        <img src={friend.imageUrl} alt=\"icon\" className={`icon ${friend.status}`} /> {friend.handle} <a> {friend.status}</a>\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className=\"BG\">\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/app\">\r\n                                <h3 className=\"pageTitle \">boredGames</h3>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"profile\">\r\n                            <div className=\"profileContain\">\r\n                                <img className=\"icon\" src={this.props.credentials.imageUrl} alt=\"icon\" />\r\n                                <h3>{this.props.credentials.handle}</h3>\r\n                                <div className=\"verticalDivide\"></div>\r\n                                <Link to=\"/\" className=\"logout\" onClick={this.logout}>\r\n                                    <h3>Logout</h3>\r\n                                </Link>\r\n                                <img className=\"settings\" src={settings} alt=\"settings\" />\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"contain\">\r\n                    <h3 className=\"popGames\">Popular games</h3>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"games\">\r\n                        <Link to=\"/games/chess\" className=\"game-link\">\r\n                            <div className=\"selector\">\r\n                                <img src={chess} alt=\"chess\" className=\"selector-img\" />\r\n                            </div>\r\n                        </Link>\r\n                        <Link to=\"/games/connect\" className=\"game-link\">\r\n                            <div className=\"selector\">\r\n                                <img src={connect4} alt=\"connect4\" className=\"selector-img\" />\r\n                            </div>\r\n                        </Link>\r\n                        <Link to=\"/games/battle\" className=\"game-link\">\r\n                            <div className=\"selector\">\r\n                                <img src={battleship} alt=\"connect4\" className=\"selector-img\" />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <Link to=\"/games\">\r\n                        <button className=\"moreGames\">See All Games</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"contain\">\r\n                    <h3 className=\"popGames\">Recent Stats</h3>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"statsList\">\r\n                        <h3 className=\"stat\">Game: {stats ? stats.recent.game : 'Loading...'}</h3>\r\n                        <h3 className=\"stat\">Opponent: {stats ? stats.recent.opponent : 'Loading...'}</h3>\r\n                        <h3 className=\"stat\">Outcome: {stats ? stats.recent.winLoss : 'Loading...'}</h3>\r\n                        <h3 className=\"stat\">Moves Made: {stats ? stats.recent.movesMade : 'Loading...'}</h3>\r\n                        <h3 className=\"stat\">Time Played: {stats ? stats.recent.timePlayed.toFixed(0) : 'Loading...'} seconds</h3>\r\n                    </div>\r\n                    <Link to=\"/stats\">\r\n                        <button className=\"moreGames\">See More Statistics</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"people\">\r\n                    <div className=\"searchUsers\">\r\n                        <form noValidate onSubmit={this.handleSubmit}>\r\n                            <input value={this.state.users} id=\"users\" type=\"text\" name=\"users\" className=\"input\" placeholder=\"search users\" onChange={this.handleChange} />\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"friendContain\">\r\n                        <h3>Friends</h3>\r\n                        <div className=\"divider\"></div>\r\n\r\n                        <ul className=\"friends\">{friends}</ul>\r\n                        {this.props.UI.errors && this.state.openFriend && (\r\n                            <div className=\"searchedFriend\" onClick={this.closeFriend}>\r\n                                <img id=\"close\" src={close} />\r\n                                <h3>{this.props.UI.errors.friends}</h3>\r\n                            </div>\r\n                        )}\r\n                        {this.props.searchedFriend.handle && !this.props.UI.errors && this.state.openFriend && (\r\n                            <div className=\"searchedFriend\" onClick={this.closeFriend}>\r\n                                <img id=\"close\" src={close} />\r\n                                <h3>{this.props.searchedFriend.handle}</h3>\r\n                                <img src={this.props.searchedFriend.imageUrl} alt=\"icon\" />\r\n                                {this.props.isFriend && <button onClick={this.addFriend}>Add Friend ➕</button>}\r\n                            </div>\r\n                        )}\r\n                        {this.props.UI.loading && (\r\n                            <div className=\"searchedFriend\">\r\n                                <Loader size=\"75px\" ball=\"15px\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n    UI: state.UI,\r\n    credentials: state.user.credentials,\r\n    stats: state.statistics.stats,\r\n    friendList: state.friends.friendList,\r\n    friendData: state.friends.friendData,\r\n    searchedFriend: state.friends.searchedFriend,\r\n    isFriend: state.friends.isFriend,\r\n});\r\n\r\nAppHome.propTypes = {\r\n    user: PropTypes.object,\r\n    UI: PropTypes.object.isRequired,\r\n    friends: PropTypes.object,\r\n    statistics: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n    searchUser: PropTypes.func.isRequired,\r\n    checkFriend: PropTypes.func.isRequired,\r\n    addFriend: PropTypes.func.isRequired,\r\n    getFriends: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { logoutUser, checkFriend, searchUser, addFriend, getFriends })(AppHome);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './../styles/games.css';\r\nimport chess from './game-imgs/chess.PNG';\r\nimport connect4 from './game-imgs/connect4.PNG';\r\nimport battleship from './game-imgs/battleship.PNG';\r\n\r\nclass Games extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"gamesBG\">\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/app\">\r\n                                <h3 className=\"pageTitle \">boredGames</h3>\r\n                            </Link>\r\n                        </li>\r\n                        <li></li>\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"gameGrid\">\r\n                    <div className=\"gameSelector\">\r\n                        <Link to=\"/games/chess\" className=\"game-link\">\r\n                            <div className=\"selector\">\r\n                                <img src={chess} alt=\"chess\" className=\"selector-img\" />\r\n                                <h3>Chess</h3>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"gameSelector\">\r\n                        <Link to=\"/games/connect\" className=\"game-link\">\r\n                            <div className=\"selector\">\r\n                                <img src={connect4} alt=\"connect4\" className=\"selector-img\" />\r\n                                <h3>Connect 4</h3>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"gameSelector\">\r\n                        <Link to=\"/games/battle\" className=\"game-link\">\r\n                            <div className=\"selector\">\r\n                                <img src={battleship} alt=\"connect4\" className=\"selector-img\" />\r\n                                <h3>Battleships</h3>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Games;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './../styles/games.css';\r\nimport './../styles/App.css';\r\nimport chess from './game-imgs/chess.PNG';\r\nimport connect4 from './game-imgs/connect4.PNG';\r\nimport battleship from './game-imgs/battleship.PNG';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class Stats extends Component {\r\n    render() {\r\n        function round(value, precision) {\r\n            var multiplier = Math.pow(10, precision || 0);\r\n            return Math.round(value * multiplier) / multiplier;\r\n        }\r\n        return (\r\n            <div className=\"BG\">\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/app\">\r\n                                <h3 className=\"pageTitle \">boredGames</h3>\r\n                            </Link>\r\n                        </li>\r\n                        <li></li>\r\n                    </ul>\r\n                </nav>\r\n                <div className=\"contain\">\r\n                    <h3 className=\"popGames\">Chess</h3>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"statsList\">\r\n                        <h3 className=\"stat\">Games Played: {this.props.stats.chess.gamesPlayed}</h3>\r\n                        <h3 className=\"stat\">Hours Played: {round(this.props.stats.chess.hoursPlayed / 60 / 60, 2)} Hrs</h3>\r\n                        <h3 className=\"stat\">Games Won: {this.props.stats.chess.gamesWon}</h3>\r\n                        <h3 className=\"stat\">Win Loss Ratio: {this.props.stats.chess.gamesWon / this.props.stats.chess.gamesPlayed}</h3>\r\n                        <h3 className=\"stat\">Average Time Per Match: {this.props.stats.chess.hoursPlayed / this.props.stats.chess.gamesPlayed} seconds</h3>\r\n                        <h3 className=\"stat\">Average Time Per Win: {this.props.stats.chess.winTimes / this.props.stats.chess.gamesWon} seconds</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"contain\">\r\n                    <h3>Connect 4</h3>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"statsList\">\r\n                        <h3 className=\"stat\">Games Played: {this.props.stats.connect4.gamesPlayed}</h3>\r\n                        <h3 className=\"stat\">Hours Played: {round(this.props.stats.connect4.hoursPlayed / 60 / 60, 2)} Hrs</h3>\r\n                        <h3 className=\"stat\">Games Won: {this.props.stats.connect4.gamesWon}</h3>\r\n                        <h3 className=\"stat\">Win Loss Ratio: {this.props.stats.connect4.gamesWon / this.props.stats.connect4.gamesPlayed}</h3>\r\n                        <h3 className=\"stat\">Average Time Per Match: {this.props.stats.connect4.hoursPlayed / this.props.stats.connect4.gamesPlayed} seconds</h3>\r\n                        <h3 className=\"stat\">Average Time Per Win: {this.props.stats.connect4.winTimes / this.props.stats.connect4.gamesWon} seconds</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"contain\">\r\n                    <h3>Battleships</h3>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"statsList\">\r\n                        <h3 className=\"stat\">Games Played: {this.props.stats.battleships.gamesPlayed}</h3>\r\n                        <h3 className=\"stat\">Hours Played: {round(this.props.stats.battleships.hoursPlayed / 60 / 60, 2)} Hrs</h3>\r\n                        <h3 className=\"stat\">Games Won: {this.props.stats.battleships.gamesWon}</h3>\r\n                        <h3 className=\"stat\">Win Loss Ratio: {this.props.stats.battleships.gamesWon / this.props.stats.battleships.gamesPlayed}</h3>\r\n                        <h3 className=\"stat\">Average Time Per Match: {this.props.stats.battleships.hoursPlayed / this.props.stats.battleships.gamesPlayed} seconds</h3>\r\n                        <h3 className=\"stat\">Average Time Per Win: {this.props.stats.battleships.winTimes / this.props.stats.battleships.gamesWon} seconds</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    stats: state.statistics.stats,\r\n});\r\n\r\nStats.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Stats);\r\n","import React, { Component } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport './panel.css';\r\n\r\nexport class Panel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const fill = this.props.black ? 'silver' : 'white';\r\n\r\n        return (\r\n            <Droppable droppableId={`${this.props.location}`}>\r\n                {(provided, snapshot) => (\r\n                    <div onClick={this.props.onMove} id={this.props.location} className={`chessPanel ${fill}`}>\r\n                        <div ref={provided.innerRef} className={snapshot.isDraggingOver ? 'highlighted' : ''} style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                        <div className=\"peice-container\">{this.props.children}</div>\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panel;\r\n","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport './../chessboard.css';\r\n\r\nexport class ChessPeice extends Component {\r\n    render() {\r\n        return (\r\n            <Draggable key={this.props.id} draggableId={'' + this.props.id + ''} index={this.props.id}>\r\n                {(provided) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"draggable-area\">\r\n                        <img onClick={this.props.getPeice} id={this.props.id} src={this.props.img} className=\"peice\" alt=\"peice\" />\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChessPeice;\r\n","import bb from './chess-peices/bb.svg';\r\nimport bk from './chess-peices/bk.svg';\r\nimport bq from './chess-peices/bq.svg';\r\nimport br from './chess-peices/br.svg';\r\nimport bn from './chess-peices/bn.svg';\r\nimport bp from './chess-peices/bp.svg';\r\nimport wb from './chess-peices/wb.svg';\r\nimport wk from './chess-peices/wk.svg';\r\nimport wq from './chess-peices/wq.svg';\r\nimport wr from './chess-peices/wr.svg';\r\nimport wn from './chess-peices/wn.svg';\r\nimport wp from './chess-peices/wp.svg';\r\n\r\nimport React, { Component } from 'react';\r\nimport Panel from './../game_util/panel';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport ChessPeice from './peices/ChessPeice';\r\n\r\nimport './chessboard.css';\r\n\r\nexport class Chessboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let board = this.props.currentFen;\r\n        if (board === null) {\r\n            board = ['11111111', '11111111', '11111111', '11111111', '11111111', '11111111', '11111111', '11111111'];\r\n        } else {\r\n            board = board.split('/');\r\n            board[7] = board[7].split(' ')[0];\r\n            for (let i = 0; i < 8; i++) {\r\n                let x = 0;\r\n                for (let j of board[i]) {\r\n                    let panel = parseInt(j);\r\n                    if (!isNaN(panel)) {\r\n                        let val = '1';\r\n                        board[i] = board[i].replace(j, val.repeat(panel));\r\n                        x = x + panel;\r\n                    } else {\r\n                        x++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const panels = [];\r\n        for (let i = 0; i < 8; i++) {\r\n            for (let j = 0; j < 8; j++) {\r\n                const black = (j + i) % 2 === 1;\r\n                let empty = parseInt(board[i][j]);\r\n                if (!isNaN(empty)) {\r\n                    panels.push(<Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}></Panel>);\r\n                } else {\r\n                    if (board[i][j] === 'P') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wp} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'p') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bp} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'R') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wr} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'r') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={br} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'N') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wn} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'n') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bn} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'B') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wb} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'b') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bb} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'Q') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wq} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'q') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bq} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'K') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={wk} />\r\n                            </Panel>\r\n                        );\r\n                    } else if (board[i][j] === 'k') {\r\n                        panels.push(\r\n                            <Panel key={j + i * 8} onMove={this.props.onMove} location={`${j}-${i}`} black={black}>\r\n                                <ChessPeice id={j + i * 8} getPeice={this.props.getPeice} img={bk} />\r\n                            </Panel>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <DragDropContext onDragEnd={this.props.handleDrag}>\r\n                <div className={`chessboard ${this.props.player}`}>{panels}</div>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chessboard;\r\n","import { SET_OPPONENT, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\r\nimport firebase from './../../services/util/config';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst db = firebase.firestore();\r\nconst realdb = firebase.database();\r\n\r\nexport const setOpponent = (user) => (dispatch) => {\r\n    let userData = {};\r\n    dispatch({ type: LOADING_UI });\r\n    db.doc(`/users/${user}`)\r\n        .get()\r\n        .then((doc) => {\r\n            userData.opponent = doc.data();\r\n            if (doc.exists) {\r\n                dispatch({ type: SET_OPPONENT, payload: userData });\r\n                dispatch({ type: CLEAR_ERRORS });\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            dispatch({ type: SET_ERRORS, payload: err });\r\n        });\r\n};\r\n","import React, { Component } from 'react';\r\nimport './connectboard.css';\r\n\r\nexport class ConnectBoard extends Component {\r\n    render() {\r\n        var board = this.props.currentBoard;\r\n        if (board === null) {\r\n            board = [\r\n                [0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0],\r\n            ];\r\n        }\r\n        let panels = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            for (let j = 0; j < 6; j++) {\r\n                if (board[i][j] === 0) {\r\n                    panels.push(\r\n                        <div key={j + i * 7} location={`${i}-${j}`} className=\"panel\">\r\n                            <div className=\"disc\"></div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (board[i][j] === 1) {\r\n                    panels.push(\r\n                        <div key={j + i * 7} location={`${i}-${j}`} className=\"panel\">\r\n                            <div className=\"disc-red\"></div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (board[i][j] === 2) {\r\n                    panels.push(\r\n                        <div key={j + i * 7} location={`${i}-${j}`} className=\"panel\">\r\n                            <div className=\"disc-yellow\"></div>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        return <div className=\"connectboard\">{panels}</div>;\r\n    }\r\n}\r\n\r\nexport default ConnectBoard;\r\n","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nexport class Ship extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            angle: false,\r\n        };\r\n    }\r\n    render() {\r\n        const rotate = () => {\r\n            this.setState({ angle: !this.state.angle });\r\n        };\r\n        let parts = [];\r\n        for (let i = 0; i < this.props.length; i++) {\r\n            parts.push(\r\n                <div key={i} num={i} className=\"part\">\r\n                    <div key={i} className=\"partInner\"></div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <Draggable key={this.props.index} id={this.props.id} draggableId={this.props.id} index={this.props.index}>\r\n                {(provided) => (\r\n                    <div\r\n                        id={this.props.id}\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        className={this.state.angle ? 'rotated ship' : 'ship'}\r\n                        onClick={() => {\r\n                            rotate();\r\n                            this.props.checkRotate(this.props.id);\r\n                        }}\r\n                    >\r\n                        {parts}\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ship;\r\n","import React, { Component } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nexport class Panel extends Component {\r\n    render() {\r\n        return (\r\n            <Droppable droppableId={`${this.props.location}`}>\r\n                {(provided, snapshot) => (\r\n                    <div id={this.props.location} className={`shipPanel`}>\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            className={snapshot.isDraggingOver ? 'highlighted' : ''}\r\n                            style={{ position: 'absolute', height: '100%', width: '100%', backgroundColor: this.props.color }}\r\n                        >\r\n                            {this.props.children}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Panel;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route {...rest} render={(props) => (authenticated === true ? <Redirect to=\"/app\" /> : <Component {...props} />)} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n    user: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthedRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route {...rest} render={(props) => (authenticated === false ? <Redirect to=\"/\" /> : <Component {...props} />)} />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\n\r\nAuthedRoute.propTypes = {\r\n    user: PropTypes.object,\r\n};\r\n\r\nexport default connect(mapStateToProps)(AuthedRoute);\r\n","import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    credentials: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload,\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null,\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_FRIEND, SEARCH_FRIEND, SET_FRIENDS, IS_FRIEND, NOT_FRIEND, APPEND_FRIEND, UPDATE_STATUS } from '../types';\r\n\r\nconst initialState = {\r\n    friendList: [],\r\n    friendData: {},\r\n    searchedFriend: {},\r\n    isFriend: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_FRIEND:\r\n            return {\r\n                ...state,\r\n                isFriend: false,\r\n            };\r\n        case SET_FRIENDS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case SEARCH_FRIEND:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case IS_FRIEND:\r\n            return {\r\n                ...state,\r\n                isFriend: false,\r\n            };\r\n        case NOT_FRIEND:\r\n            return {\r\n                ...state,\r\n                isFriend: true,\r\n            };\r\n        case APPEND_FRIEND:\r\n            return {\r\n                ...state,\r\n                friendData: { ...state.friendData, [action.payload.userId]: { ...action.payload } },\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_OPPONENT } from '../types';\r\n\r\nconst initialState = {\r\n    opponent: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_OPPONENT:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_STATS, UPDATE_STATS } from '../types';\r\n\r\nconst initialState = {\r\n    stats: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_STATS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './reducers/userReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\nimport friendReducer from './reducers/friendReducer';\r\nimport opponentReducer from './reducers/opponentReducer';\r\nimport statsReducer from './reducers/statsReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    friends: friendReducer,\r\n    UI: uiReducer,\r\n    opponent: opponentReducer,\r\n    statistics: statsReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n              // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n          })\r\n        : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(...middleware)\r\n    // other store enhancers if any\r\n);\r\n\r\nconst store = createStore(reducers, initialState, enhancer);\r\n\r\nexport default store;\r\n","import React, { useEffect, useRef } from 'react';\nimport './styles/App.css';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport AppHome from './pages/AppHome';\nimport Games from './pages/Games';\nimport stats from './pages/Stats';\nimport chess from './games/chess/Chessgame';\nimport connect4 from './games/connect4/Connectgame';\nimport battleships from './games/battleships/BattleGame';\nimport AuthRoute from './util/AuthRoute';\nimport AuthedRoute from './util/AuthedRoute';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { getUserData, getUserStats, logoutUser } from './redux/actions/userActions';\nimport { getFriends } from './redux/actions/friendActions';\nimport firebase from './services/util/config';\nimport { connect } from 'socket.io-client';\n\nconst db = firebase.firestore();\nconst oldRealTimeDb = firebase.database();\n\nconst usersRef = db.collection('users'); // Get a reference to the Users collection;\nconst onlineRef = oldRealTimeDb.ref('.info/connected'); // Get a reference to the list of connections\n\nfirebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n        onlineRef.on('value', (snapshot) => {\n            oldRealTimeDb\n                .ref(`/status/${user.uid}`)\n                .onDisconnect()\n                .set('offline')\n                .then(() => {\n                    oldRealTimeDb.ref(`/status/${user.uid}`).set('online');\n                });\n            window.onblur = () => {\n                oldRealTimeDb\n                    .ref(`/status/${user.uid}`)\n                    .onDisconnect()\n                    .set('offline')\n                    .then(() => {\n                        oldRealTimeDb.ref(`/status/${user.uid}`).set('away');\n                    });\n            };\n            window.onfocus = () => {\n                oldRealTimeDb\n                    .ref(`/status/${user.uid}`)\n                    .onDisconnect()\n                    .set('offline')\n                    .then(() => {\n                        oldRealTimeDb.ref(`/status/${user.uid}`).set('online');\n                    });\n            };\n        });\n        store.dispatch({ type: SET_AUTHENTICATED });\n        store.dispatch(getUserData());\n        store.dispatch(getUserStats());\n        store.dispatch(getFriends());\n    } else {\n        store.dispatch(logoutUser());\n    }\n});\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <AuthRoute exact path=\"/login\" component={Login} />\n                    <AuthRoute exact path=\"/signup\" component={Signup} />\n                    <div className=\"container\">\n                        <AuthRoute exact path=\"/\" component={Home} />\n                        <AuthedRoute exact path=\"/app\" component={AppHome} />\n                        <AuthedRoute exact path=\"/games\" component={Games} />\n                        <AuthedRoute exact path=\"/stats\" component={stats} />\n                        <AuthedRoute path=\"/games/chess\" component={chess} />\n                        <AuthedRoute path=\"/games/connect\" component={connect4} />\n                        <AuthedRoute path=\"/games/battle\" component={battleships} />\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chess.248b0159.PNG\";","module.exports = __webpack_public_path__ + \"static/media/connect4.c176bba0.PNG\";","module.exports = __webpack_public_path__ + \"static/media/battleship.d7bfb940.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Bishop.255a39db.svg\";","//checks if input is empty\r\nconst isEmpty = (text) => {\r\n    if (text.trim() === '') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\n//checks if email is an actual email\r\nconst isEmail = (email) => {\r\n    const emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (email.match(emailRegEx)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexports.validateSignupData = (data) => {\r\n    //validation\r\n    let errors = {};\r\n\r\n    if (isEmpty(data.email)) {\r\n        errors.email = 'Must not be empty';\r\n    } else if (!isEmail(data.email)) {\r\n        errors.email = 'Must be a valid email address';\r\n    }\r\n    if (isEmpty(data.password)) {\r\n        errors.password = 'Must not be empty';\r\n    }\r\n    if (data.password !== data.confirmPassword) {\r\n        errors.confirmPassword = 'passwords must match';\r\n    }\r\n    if (isEmpty(data.handle)) {\r\n        errors.handle = 'Must not be empty';\r\n    }\r\n    return {\r\n        errors,\r\n        valid: Object.keys(errors).length === 0 ? true : false,\r\n    };\r\n};\r\n\r\nexports.validateLoginData = (data) => {\r\n    //validation\r\n    let errors = {};\r\n\r\n    if (isEmpty(data.email)) {\r\n        errors.email = 'Must not be empty';\r\n    }\r\n    if (isEmpty(data.password)) {\r\n        errors.password = 'Must not be empty';\r\n    }\r\n\r\n    return {\r\n        errors,\r\n        valid: Object.keys(errors).length === 0 ? true : false,\r\n    };\r\n};\r\n\r\nexports.reduceUserDetails = (data) => {\r\n    let userDetails = {};\r\n    if (!isEmpty(data.bio.trim())) userDetails.bio = data.bio;\r\n    if (!isEmpty(data.location.trim())) userDetails.location = data.location;\r\n    console.log(userDetails);\r\n    return userDetails;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/close.bad80992.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings-24px.dd8af600.svg\";","module.exports = __webpack_public_path__ + \"static/media/bb.8011bf44.svg\";","module.exports = __webpack_public_path__ + \"static/media/bk.d8979832.svg\";","module.exports = __webpack_public_path__ + \"static/media/bq.ef6e2590.svg\";","module.exports = __webpack_public_path__ + \"static/media/br.08c3972b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bn.daa3de25.svg\";","module.exports = __webpack_public_path__ + \"static/media/bp.d1670065.svg\";","module.exports = __webpack_public_path__ + \"static/media/wb.1fe99b0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wk.d0c846df.svg\";","module.exports = __webpack_public_path__ + \"static/media/wq.1198ca3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wr.02fb1599.svg\";","module.exports = __webpack_public_path__ + \"static/media/wn.07bc214c.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp.87aea985.svg\";"],"sourceRoot":""}